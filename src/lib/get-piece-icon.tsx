import React from 'react';

export const getPieceIcon = (type: string, color: string) => {
    // The explicit fill and stroke on the path elements will override this, but it's good for fallback.
    const pieceFill = color;
    // Black pieces get a white stroke, all other pieces get a black stroke.
    const pieceStroke = color === '#0f172a' || color === '#18181b' ? '#f8fafc' : '#0f172a';

    const style: React.CSSProperties = {
        fill: pieceFill,
        stroke: pieceStroke,
        strokeWidth: 1.5,
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
    };

    switch (type.toLowerCase()) {
        case 'p': // Pawn
            return <g style={style}><path d="M22.5,11.63 C22.5,11.63 22.5,11.63 22.5,11.63 C22.5,11.63 22.5,11.63 22.5,11.63 C20.12,11.63 18.25,13.5 18.25,15.88 C 18.25,18.25 20.12,20.13 22.5,20.13 C 24.88,20.13 26.75,18.25 26.75,15.88 C 26.75,13.5 24.88,11.63 22.5,11.63 Z M 22.5,22 C 19.5,22 19,23.5 19,23.5 L 19,26 C 19,26 20.5,26 22.5,26 C 24.5,26 26,26 26,26 L 26,23.5 C 26,23.5 25.5,22 22.5,22 Z M 20,28 L 20,31.5 C 20,31.5 20,31.5 20,31.5 C 20,31.5 20,31.5 20,31.5 C 20,32.33 20.67,33 21.5,33 L 23.5,33 C 24.33,33 25,32.33 25,31.5 L 25,28 Z M 17.5,34 L 17.5,35.5 L 27.5,35.5 L 27.5,34 L 17.5,34 Z" /></g>;
        case 'r': // Rook
            return <g style={style}><path d="M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 Z M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 Z M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 Z M 34,14 L 31,17 L 14,17 L 11,14 M 31,17 L 31,29.5 L 14,29.5 L 14,17 M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5 M 11,14 L 34,14" /></g>;
        case 'n': // Knight
            return <g style={style}><path d="M 22,10 C 32.5,10 31.5,18 31.5,18 C 31.5,24 28,29 28,29 L 15.5,29 C 15.5,29 13.5,24.5 13.5,24.5 C 13.5,24.5 13.5,19.5 13.5,19.5 C 13.5,19.5 14,16.5 14,16.5 C 14,16.5 11.5,14.5 11.5,14.5 C 11.5,14.5 10.5,12 10.5,12 C 10.5,12 12.5,10 12.5,10 C 12.5,10 15,11.5 15,11.5 C 15,11.5 16,10 22,10 Z M 15.5,29 L 15.5,32 L 28,32 L 28,29 M 12.5,32 L 31.5,32 L 31.5,39 L 12.5,39 L 12.5,32 Z" /></g>;
        case 'b': // Bishop
            return <g style={style}><path d="M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 L 6,38 C 7.35,36.54 9,36 9,36 Z M 15,32 C 15,32 15,29.5 15,29.5 C 15,29.5 15,27 15,27 C 15,27 17.5,24.5 17.5,24.5 L 27.5,24.5 C 27.5,24.5 30,27 30,27 C 30,27 30,29.5 30,29.5 C 30,29.5 30,32 30,32 L 15,32 Z M 25,23 C 25,23 25.5,20 25.5,18.5 C 25.5,17 24.5,15.5 22.5,15.5 C 20.5,15.5 19.5,17 19.5,18.5 C 19.5,20 20,23 20,23 L 25,23 Z M 22.5,15.5 L 22.5,12.5 C 21.5,12.5 20.5,11.5 20.5,10.5 C 20.5,9.5 21.5,8.5 22.5,8.5 C 23.5,8.5 24.5,9.5 24.5,10.5 C 24.5,11.5 23.5,12.5 22.5,12.5 Z M 22.5,12.5 L 22.5,15.5" /></g>;
        case 'q': // Queen
            return <g style={style}><path d="M 8 12 A 2.5 2.5 0 1 1 3 12 A 2.5 2.5 0 1 1 8 12 M 15.5 12 A 2.5 2.5 0 1 1 10.5 12 A 2.5 2.5 0 1 1 15.5 12 M 22.5 12 A 2.5 2.5 0 1 1 17.5 12 A 2.5 2.5 0 1 1 22.5 12 M 30 12 A 2.5 2.5 0 1 1 25 12 A 2.5 2.5 0 1 1 30 12 M 37.5 12 A 2.5 2.5 0 1 1 32.5 12 A 2.5 2.5 0 1 1 37.5 12 M 9,26 C 17.5,24.5 30,24.5 38.5,26 L 38.5,14 L 33,12 L 27.5,19 L 22.5,10 L 17.5,19 L 12,12 L 6.5,14 L 9,26 z M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z" /></g>;
        case 'k': // King
            return <g style={style}><path d="M 22.5,6 L 22.5,11 L 20,11 L 20,8 L 25,8 L 25,11 L 22.5,11 M 22.5,25 C 25.5,25 27,28 27,28 C 27,28 27,31 27,31 L 18,31 C 18,31 18,28 18,28 C 18,28 19.5,25 22.5,25 Z M 12,38 L 33,38 L 33,35 L 12,35 L 12,38 Z M 12,35 L 12,31 L 18,31 L 18,26 C 18,26 15,26 15,23 C 15,20 18.5,14 22.5,14 C 26.5,14 30,20 30,23 C 30,26 27,26 27,26 L 27,31 L 33,31 L 33,35 L 12,35 Z" /></g>;
        default: return null;
    }
}

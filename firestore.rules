
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own data, and logged-in users can view public profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Logged-in users can read their own subcollections
    match /users/{userId}/{subcollection}/{docId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Rules for game rooms
    match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.createdBy.uid == request.auth.uid;
      allow update: if request.auth != null && request.auth.uid in resource.data.players;
      allow delete: if request.auth != null && resource.data.createdBy.uid == request.auth.uid;
    }

    // Messages subcollection within game rooms
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    // Rules for chats
    match /chats/{chatId} {
        allow read, update: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
    match /chats/{chatId}/messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }

    // Rules for friend requests and notifications
    match /friend_requests/{requestId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
        allow create: if request.auth != null && request.resource.data.fromId == request.auth.uid;
        allow delete: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Logged-in users can create transactions for themselves
    match /transactions/{transactionId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow admins to manage settings, applications, and claims
    match /settings/{docId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /marketing_applications/{appId} {
        allow read, write: if request.auth != null;
    }
    match /bonus_claims/{claimId} {
        allow read, write: if request.auth != null;
    }

    // Allow logged-in users to read all active bonus campaigns
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      // Admin-only write access
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /signup_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow users to claim bonuses under their own user document
    match /daily_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, write: if request.auth.uid == userId;
    }
     match /deposit_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, write: if request.auth.uid == userId;
    }
     match /signup_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}

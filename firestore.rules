rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only create their own user document.
    // They can only read or update their own document after it's created.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId;
    }

    // Transactions can only be created by authenticated users.
    // Users can only read their own transactions.
    match /transactions/{transactionId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Anyone can submit a marketing application.
    match /marketing_applications/{applicationId} {
        allow create: if request.auth != null;
        // Admins will handle read/update/delete via server-side logic
    }
    
    // Allow any authenticated user to read bonus campaigns
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
    }
    
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
    }

    // Game rooms can be read by anyone, but only created/updated by authenticated users.
    // More specific logic would be needed here for a production app.
    match /game_rooms/{roomId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null;
    }
    
    // Allow users to read their own claims, but not create them directly.
    match /users/{userId}/bonus_claims/{claimId} {
        allow read: if request.auth.uid == userId;
    }
    
    // Prevent client-side writes to bonus claims subcollections.
    match /daily_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read, write: if false; 
    }
     match /deposit_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read, write: if false; 
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

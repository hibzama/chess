rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can read/update their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin() || (isSignedIn() && 'campaignInfo.referrerId' in request.query.where && request.query.where['campaignInfo.referrerId'] == request.auth.uid);
      allow create: if isSignedIn(); 
    }
    
    // Anyone can read public game rooms. Players in the game can update it.
    match /game_rooms/{roomId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource.data.players.hasAny([request.auth.uid]);
      allow delete: if isSignedIn() && request.auth.uid == resource.data.createdBy.uid;

      match /messages/{messageId} {
        allow read, create: if isSignedIn() && resource.data.players.hasAny([request.auth.uid]);
      }
    }
    
    // General read access for campaigns, but only admins can change them.
    match /signup_bonus_campaigns/{campaignId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
    }
    
    match /daily_bonus_campaigns/{campaignId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
       
       match /claims/{claimId} {
        allow read, create: if isSignedIn() && request.auth.uid == claimId;
        allow write: if isAdmin();
       }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
       
       match /claims/{claimId} {
        allow create: if isAdmin(); // Claims are created by server-side logic in this case
        allow read, write: if isAdmin();
       }
    }
    
    match /referral_campaigns/{campaignId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
    }
    
    // Users can create claims for themselves. Admins can manage all claims.
    match /bonus_claims/{claimId} {
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow read, update: if isAdmin();
    }
    
    // Transaction history rules
    match /transactions/{transactionId} {
        allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
        allow create: if isSignedIn() && (request.resource.data.userId == request.auth.uid || isAdmin());
        allow update: if isAdmin();
    }
    
    // Marketing rules
    match /marketing_applications/{appId} {
      allow create: if true; // Anyone can apply
      allow read, update: if isAdmin();
    }
    
    match /chats/{chatId} {
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.userIds;
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }

    match /settings/{settingId} {
        allow read: if isAdmin();
        allow write: if isAdmin();
    }

  }
}

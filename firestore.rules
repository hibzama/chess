rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isMarketer() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'marketer';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read, list: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update, delete: if isOwner(userId) || isAdmin();
      
      // Subcollections
      match /{document=**} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    match /game_rooms/{roomId} {
        allow read, list: if request.auth.uid != null;
        allow create: if request.auth.uid != null;
        allow update: if request.auth.uid != null || isAdmin(); 
        allow delete: if request.resource.data.createdBy.uid == request.auth.uid || isAdmin();
        
        match /messages/{messageId} {
            allow read, write: if request.auth.uid != null;
        }
    }

    match /friend_requests/{requestId} {
        allow read, write: if request.auth.uid == request.resource.data.fromId || request.auth.uid == request.resource.data.toId;
        allow delete: if request.auth.uid == request.resource.data.fromId || request.auth.uid == request.resource.data.toId || isAdmin();
    }
    
    match /chats/{chatId} {
        allow read, create, update: if request.auth.uid in resource.data.userIds;
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid != null;
    }
    
    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
        allow read, update: if isAdmin();
        allow create: if request.auth.uid == null || request.auth.uid != null;
    }

    match /settings/{settingId} {
        allow read: if request.auth.uid != null;
        allow write: if isAdmin();
    }

    match /signup_bonus_campaigns/{campaignId} {
        allow read, list: if request.auth.uid != null;
        allow write: if isAdmin();

        match /claims/{claimId} {
            allow read: if request.auth.uid == claimId || isAdmin();
            allow create: if request.auth.uid == claimId;
        }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
        allow read, list: if request.auth.uid != null;
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if request.auth.uid == claimId || isAdmin();
            allow create: if request.auth.uid == claimId;
        }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow read, list: if request.auth.uid != null;
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if request.auth.uid == claimId || isAdmin();
            allow create: if request.auth.uid == claimId;
        }
    }
    
    match /referral_campaigns/{campaignId} {
        allow read, list: if request.auth.uid != null;
        allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow read, create: if request.auth.uid != null;
        allow update, delete: if isAdmin();
    }

    // Rules for collectionGroup queries
    match /{path=**}/bonus_claims/{claimId} {
        allow read, list: if isAdmin();
    }
  }
}
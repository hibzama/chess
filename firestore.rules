rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // USER-SPECIFIC RULES
    match /users/{userId} {
      // Anyone can read a user's profile
      allow get: if isSignedIn();
      // Only the user themselves or an admin can update their own data
      allow update: if request.auth.uid == userId || isAdmin();
      // Allow creation of new users
      allow create: if true;
      
      // Subcollections for users
      match /active_campaigns/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /bonus_claims/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /daily_bonus_claims/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // GAME-SPECIFIC RULES
    match /game_rooms/{roomId} {
      // Anyone signed in can see the list of public rooms or get a specific room
      allow get, list: if isSignedIn();
      // Anyone can create a new game room
      allow create: if isSignedIn();
      
      // A user can update a room IF:
      // 1. They are authenticated.
      // 2. The room is 'waiting' and is being changed to 'in-progress'.
      // 3. The user joining is not the user who created it.
      // 4. The user joining is being added as player2.
      allow update: if isSignedIn() &&
                      resource.data.status == 'waiting' &&
                      request.resource.data.status == 'in-progress' &&
                      request.auth.uid != resource.data.createdBy.uid &&
                      request.resource.data.player2.uid == request.auth.uid;
                      
      // Allow deletion only by the creator if the room is still waiting
      allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid && resource.data.status == 'waiting';

      // Messages within a game room
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.players;
      }
    }
    
    // BONUS CAMPAIGN RULES
    match /daily_bonus_campaigns/{campaignId} {
        // Allow reads for all users to see active campaigns
        allow get, list: if isSignedIn();
        // Allow admin to do anything
        allow write, delete: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if isSignedIn();
            allow create: if request.auth.uid == claimId;
        }
    }

    match /deposit_bonus_campaigns/{campaignId} {
        allow get, list: if isSignedIn();
        allow write, delete: if isAdmin();
         match /claims/{claimId} {
            allow read: if isSignedIn();
            allow create: if request.auth.uid == claimId;
        }
    }

    match /signup_bonus_campaigns/{campaignId} {
        allow get, list: if isSignedIn();
        allow write, delete: if isAdmin();
         match /claims/{claimId} {
            allow read: if isSignedIn();
            allow create: if request.auth.uid == claimId;
        }
    }
    
    match /referral_campaigns/{campaignId} {
       allow get, list: if isSignedIn();
       allow write, delete: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow create: if isSignedIn();
        allow read, update: if isAdmin() || request.auth.uid == resource.data.userId;
    }
    
    // TRANSACTION RULES
    match /transactions/{transactionId} {
        // A user can create a transaction for themselves
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        // Only an admin can update (approve/reject) a transaction
        allow update: if isAdmin();
        // A user can read their own transactions, an admin can read any
        allow get, list: if isSignedIn() && (isAdmin() || resource.data.userId == request.auth.uid);
    }
    
    // MARKETING APPLICATION RULES
    match /marketing_applications/{appId} {
        // Anyone can submit an application
        allow create: if true;
        // Only admins can read or update applications
        allow read, update: if isAdmin();
    }
    
    // SETTINGS RULES
    match /settings/{settingId} {
        // Only admins can read/write global settings
        allow read, write: if isAdmin();
    }
  }
}

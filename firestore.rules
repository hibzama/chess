rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // UTILITY: Check if user has admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // UTILITY: Check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // USERS
    match /users/{userId} {
      // Anyone can read any user's profile data
      allow get, list: if isSignedIn();
      // Only the user themselves or an admin can update their own data
      allow update: if request.auth.uid == userId || isAdmin();
      // Only admins can create or delete users directly
      allow create, delete: if isAdmin();

      // Subcollections for a user
      match /active_campaigns/{docId} {
        allow read, write, delete: if request.auth.uid == userId || isAdmin();
      }
      match /bonus_claims/{docId} {
        allow read, write, delete: if request.auth.uid == userId || isAdmin();
      }
      match /daily_bonus_claims/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // GAME ROOMS
    match /game_rooms/{roomId} {
      // Any signed-in user can see the list of rooms or get a specific room
      allow get, list: if isSignedIn();
      // Only signed-in users can create a game room
      allow create: if isSignedIn();
      // Allow updates for joining, playing moves, or ending the game
      allow update: if isSignedIn();
      // Only the creator or an admin can delete a waiting room
      allow delete: if (resource.data.createdBy.uid == request.auth.uid && resource.data.status == 'waiting') || isAdmin();

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.players;
      }
    }
    
    // TRANSACTIONS
    match /transactions/{transactionId} {
      // A user can create a transaction for themselves
      allow create: if request.resource.data.userId == request.auth.uid;
      // Only admins can update or delete transactions
      allow update, delete: if isAdmin();
      // A user can read their own transactions, admins can read any
      allow get, list: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // NOTIFICATIONS
    match /notifications/{notificationId} {
        // Users can only read their own notifications
        allow get, list: if request.auth.uid == resource.data.userId;
        // Users can update their own notifications (e.g., mark as read)
        allow update: if request.auth.uid == resource.data.userId;
        // Only backend/admin can create notifications
        allow create: if isAdmin();
    }

    // MARKETING APPLICATIONS
    match /marketing_applications/{appId} {
      // Anyone can create an application
      allow create: if true;
      // Only admins can read, update, or delete applications
      allow read, update, delete: if isAdmin();
    }

    // REFERRAL & BONUS CAMPAIGNS
    match /referral_campaigns/{campaignId} {
        // Any user can see available campaigns
        allow get, list: if isSignedIn();
        // Only admins can manage campaigns
        allow create, update, delete: if isAdmin();
    }
    match /signup_bonus_campaigns/{campaignId} {
        allow get, list: if true; // Allow reading for bonus card logic
        allow create, update, delete: if isAdmin();
        match /claims/{claimId} {
            allow read, write: if isSignedIn(); // User can claim, admin can see
        }
    }
    match /daily_bonus_campaigns/{campaignId} {
        allow get, list: if isSignedIn();
        allow create, update, delete: if isAdmin();
        match /claims/{claimId} {
             allow read, write: if isSignedIn();
        }
    }
     match /deposit_bonus_campaigns/{campaignId} {
        allow get, list: if isSignedIn();
        allow create, update, delete: if isAdmin();
        match /claims/{claimId} {
             allow read, write: if isSignedIn();
        }
    }

    // BONUS CLAIMS (GROUP)
    match /{path=**}/bonus_claims/{claimId} {
        // User can read their own claims, Admin can read all
        allow get, list: if request.auth.uid == resource.data.userId || isAdmin();
        // User can create their own claim
        allow create: if request.resource.data.userId == request.auth.uid;
        // Admin can update any claim
        allow update, delete: if isAdmin();
    }
    
    // SETTINGS
    match /settings/{settingId} {
      // Anyone can read settings (e.g. referral config)
      allow get: if true;
      // Only admins can change settings
      allow write: if isAdmin();
    }
  }
}

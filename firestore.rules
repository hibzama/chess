
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins can read/write anything
    match /{path=**} {
        allow read, write: if isAdmin();
    }
    
    // Users can read/write their own data
    match /users/{userId} {
      allow read, update: if isOwner(userId);
    }
    
    // Specific collection rules
    match /game_rooms/{roomId} {
        allow read: if true; // Public read for lobbies
        allow write: if request.auth != null; // Any authenticated user can create/join
    }
    
    match /transactions/{transactionId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId);
    }
    
    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }

    match /marketing_applications/{appId} {
        allow create: if true; // Anyone can apply
    }
  }
}

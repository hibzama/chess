rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow get;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;

      // Allow admin to read/write any user's data
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      match /event_enrollments/{enrollmentId} {
        allow read: if request.auth.uid == userId;
        allow create: if request.auth.uid == userId;

        // Admins can read any enrollment
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        match /progress_history/{progressId} {
           allow read: if request.auth.uid == userId;
           allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        }
      }
      
      match /daily_bonus_claims/{claimId} {
        allow read, create: if request.auth.uid == userId;
      }
    }

    match /game_rooms/{roomId} {
        allow get;
        allow list: if request.auth != null;
        
        allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy.uid;
        
        allow update: if request.auth != null && request.auth.uid in resource.data.players;

        allow delete: if request.auth.uid == resource.data.createdBy.uid && resource.data.status == 'waiting';
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }

    match /chats/{chatId} {
        // Allow users to query for their own chats
        allow list: if request.auth != null;
        // Allow users in the chat to read/update it
        allow read, update: if request.auth.uid in resource.data.users;
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }
    
    match /friend_requests/{requestId} {
      allow read, create: if request.auth.uid == request.resource.data.fromId;
      allow read, delete: if request.auth.uid == request.resource.data.toId || request.auth.uid == request.resource.data.fromId;
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
    }
    
    match /settings/{settingId} {
        // Admins can read/write all settings
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        // Authenticated users can read deposit bonus settings to display them
        allow get: if request.auth != null && settingId == 'depositBonus';
    }

    match /transactions/{transactionId} {
        // User can only see their own transactions.
        allow list, get: if request.auth.uid == resource.data.userId;
        // User can create their own transactions
        allow create: if request.auth.uid == request.resource.data.userId;
        // Admins can read/update any transaction (for approval/rejection)
        allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /marketing_applications/{appId} {
        allow create; // Anyone can apply
        allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /events/{eventId} {
        allow get: if request.auth != null;
        allow list: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /dailyBonusClaims/{bonusId} {
        allow read, update: if request.auth != null;
        allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /bonuses/{bonusId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
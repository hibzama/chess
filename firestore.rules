rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read;
      allow create: if isSignedIn();
      allow update, delete: if isUser(userId) || isAdmin();
    }

    match /game_rooms/{roomId} {
      allow read;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource.data.players[0] == request.auth.uid || resource.data.players[1] == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid;
    }
    
    match /transactions/{transactionId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
        allow create;
        allow read, update, delete: if isAdmin();
    }

    match /settings/{settingId} {
        allow read;
        allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && resource.data.userId == request.auth.uid;
        allow create: if isSignedIn();
    }

    // Rules for Chat
    match /chats/{chatId} {
      // Allow read/write access only to users who are part of the chat.
      allow read, update, delete: if isSignedIn() && request.auth.uid in resource.data.users;
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.users;

      // Rules for messages subcollection
      match /messages/{messageId} {
        // Allow users in the chat to read messages
        allow read: if isSignedIn() && get(/databases/$(database)/documents/chats/$(chatId)).data.users[request.auth.uid] != null;
        // Allow a user to create a message if they are the sender and are part of the chat
        allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid && get(/databases/$(database)/documents/chats/$(chatId)).data.users[request.auth.uid] != null;
      }
    }
  }
}

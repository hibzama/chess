rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    match /users/{userId} {
      allow read;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && request.auth.uid == userId;
    }

    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.fromId;
      allow update: if isSignedIn() && request.auth.uid == request.resource.data.toId; // Allow recipient to update status (accept/decline)
      allow delete: if isSignedIn() && request.auth.uid == resource.data.fromId; // Allow sender to cancel
    }

    match /game_rooms/{roomId} {
      allow read;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.createdBy.uid;
      
      // Allow updates only from players in the game
      allow update: if isSignedIn() && request.auth.uid in resource.data.players;
      
      allow delete: if isSignedIn() && request.auth.uid == resource.data.createdBy.uid;
    }

    match /transactions/{transactionId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }

    match /notifications/{notificationId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
        allow create: if isSignedIn();
        allow read, update: if isSignedIn() && getUserData(request.auth.uid).role == 'admin';
    }

    match /chats/{chatId} {
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.users;
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      }
    }
  }
}

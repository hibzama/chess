rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
      allow create: if request.auth != null;

      // Allow admins to read all event enrollments
      match /event_enrollments/{enrollmentId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Allow admins to read all event enrollments for the admin panel
    match /{path=**}/event_enrollments/{enrollmentId} {
      allow read: if isAdmin();
    }

    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth != null;
        allow update: if isAdmin();
    }
    
    match /marketing_applications/{applicationId} {
        allow read: if isAdmin();
        allow create: if request.auth == null;
        allow update: if isAdmin();
    }

    match /chats/{chatId} {
        allow read, write: if request.auth.uid in resource.data.users;
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }

    match /game_rooms/{roomId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        
        allow update: if request.auth.uid in resource.data.players && 
                        (request.resource.data.status == 'in-progress' || 
                         (resource.data.status == 'in-progress' && request.resource.data.status == 'completed'));

        allow delete: if request.auth.uid == resource.data.createdBy.uid;

        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }
  }
}

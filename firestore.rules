rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isUser() {
        return request.auth.uid != null;
    }

    // Default Deny
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User Management Rules
    match /users/{userId} {
        // Any authenticated user can read any user's profile
        // This is needed for viewing profiles, leaderboards, and referral data.
        allow get, list: if isUser();
        
        // A user can only create their own user document
        allow create: if isOwner(userId);
        
        // A user can only update their own document, OR an admin can update any
        allow update: if isOwner(userId) || isAdmin();
    }
    
     // Game Room Rules
    match /game_rooms/{roomId} {
        // Any authenticated user can see public game rooms
        allow get, list: if isUser();

        // A user can create a game room for themselves
        allow create: if isOwner(request.resource.data.createdBy.uid);
        
        // A user can delete their own waiting room. An admin can delete any.
        allow delete: if (resource.data.status == 'waiting' && isOwner(resource.data.createdBy.uid)) || isAdmin();

        // Allow players of a game or admins to update it
        allow update: if request.auth.uid in resource.data.players || isAdmin();
    }
    
    // Transaction Rules
    match /transactions/{transactionId} {
        // Any authenticated user can create transactions for themselves (wager, deposit, etc)
        allow create: if isOwner(request.resource.data.userId);
        
        // Only admins can update transactions (to approve/reject)
        allow update: if isAdmin();
        
        // Any authenticated user can read their own transactions. Admins can read all.
        allow get, list: if isUser();
    }
    
     // Chat Rules
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.userIds;
    }
    match /chats/{chatId}/messages/{messageId} {
       allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }
    
    // Notification Rules
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
      allow create: if isUser();
    }
    
    // Marketing Applications
    match /marketing_applications/{appId} {
      allow create; // Anyone can apply
      allow read, update: if isAdmin(); // Only admins can manage
    }
    
     // Bonus Campaigns - General Read Access for all users
    match /signup_bonus_campaigns/{campaignId} {
        allow get, list: if isUser();
        allow write: if isAdmin();
        match /claims/{claimId} {
             allow create: if isUser();
             allow read, write: if isAdmin();
        }
    }
    match /daily_bonus_campaigns/{campaignId} {
        allow get, list: if isUser();
        allow write: if isAdmin();
         match /claims/{claimId} {
             allow create: if isUser();
             allow read, write: if isAdmin();
        }
    }
     match /deposit_bonus_campaigns/{campaignId} {
        allow get, list: if isUser();
        allow write: if isAdmin();
         match /claims/{claimId} {
             allow create: if isUser();
             allow read, write: if isAdmin();
        }
    }
    
     // Referral Campaigns
    match /referral_campaigns/{campaignId} {
        allow read: if isUser();
        allow write: if isAdmin();
    }
    
    // User-specific campaign data
    match /users/{userId}/active_campaigns/{docId} {
        // A user can read/write to their own active campaign document
        allow read, write: if isOwner(userId);
        // An admin can delete it after approval
        allow delete: if isAdmin();
    }
    
     match /users/{userId}/daily_bonus_claims/{claimId} {
        allow read, create: if isOwner(userId);
    }
    
    // Collection Group for Bonus Claims
    match /{path=**}/bonus_claims/{claimId} {
        // A user can create their own bonus claim
        allow create: if isUser() && isOwner(request.resource.data.userId);
        // Admins can read/update any claim (for approval/rejection)
        allow read, update: if isAdmin();
    }
    
    // Settings Documents
    match /settings/{settingId} {
      allow read: if isUser();
      allow write: if isAdmin();
    }

  }
}
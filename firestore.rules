rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can do anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Users can only read/write their own data, but can read some public collections
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      
      // Allow users to read their own event enrollments
      match /event_enrollments/{enrollmentId} {
        allow read, write: if request.auth.uid == userId;
      }
      
      // Allow users to read their own bonus claims
      match /daily_bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /game_rooms/{gameId} {
      // Anyone can read public game rooms for the lobby
      allow read: if resource.data.isPrivate == false;
      // Authenticated users can create/join rooms
      allow create, update: if request.auth != null;
    }
    
    match /chats/{chatId} {
        // Users can only access chats they are a part of
        allow read, write: if request.auth.uid in resource.data.users;
        
        match /messages/{messageId} {
           allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }
    
    match /events/{eventId} {
        allow read: if request.auth != null;
    }
    
    match /settings/{settingId} {
        allow read: if request.auth != null;
    }
    
     match /bonuses/{bonusId} {
        allow read: if request.auth != null;
    }
    
    match /dailyBonusClaims/{claimId} {
        allow read, write: if request.auth != null;
    }

    // Authenticated users can create transactions (deposits, etc)
    match /transactions/{transactionId} {
        allow create, read: if request.auth != null;
    }

  }
}

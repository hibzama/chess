rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      
      allow update: if request.auth.uid == userId;
    }
    
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    match /transactions/{transactionId} {
        allow create: if request.auth != null;
        allow read: if isAdmin();
        allow update: if isAdmin();
    }

    match /game_rooms/{roomId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
                      // Allow a user to join a waiting game
                      (request.resource.data.status == 'in-progress' && 
                       resource.data.status == 'waiting' &&
                       request.resource.data.player2.uid == request.auth.uid) ||
                      // Allow a player in the game to update it while it's in-progress
                      (resource.data.players[0] == request.auth.uid || 
                       resource.data.players[1] == request.auth.uid)
                    );
      allow delete: if request.auth != null && resource.data.createdBy.uid == request.auth.uid;
      
      match /messages/{messageId} {
        allow read: if request.auth.uid in resource.data.players;
        allow create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    match /marketing_applications/{appId} {
      allow create: if request.auth == null;
      allow read, update: if isAdmin();
    }

    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.users;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      }
    }
    
    match /friend_requests/{requestId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.fromId || request.auth.uid == request.resource.data.toId;
    }

    match /settings/{settingId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /bonuses/{bonusId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /dailyBonusClaims/{bonusId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    match /events/{eventId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // Server-side or trusted client
    }
  }
}

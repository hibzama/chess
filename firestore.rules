
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own data and update specific fields.
    // They can only create their own user document.
    match /users/{userId} {
      allow read;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }

    // Allow logged-in users to read from the settings collection
    match /settings/{settingId} {
        allow read: if isSignedIn();
        allow write: if false; // Should only be written from Admin SDK
    }
    
    match /game_rooms/{roomId} {
        allow read;
        allow create: if isSignedIn();
        allow update: if isSignedIn() && resource.data.status != 'completed';
        allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid;
        
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in resource.data.players;
        }
    }
    
    match /marketing_applications/{appId} {
        allow create: if true; // Anyone can apply
        allow read, update, delete: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /transactions/{transactionId} {
        allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        allow create: if isSignedIn();
        allow update: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && resource.data.userId == request.auth.uid;
        allow create: if isSignedIn();
    }
    
    // Bonus Rules
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if true;
      allow write: if false; // Admin only

      match /claims/{userId} {
        allow read: if isSignedIn() && isOwner(userId);
        allow create: if isSignedIn() && isOwner(userId);
      }
    }

    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if true;
      allow write: if false; // Admin only

      match /claims/{userId} {
        allow read: if isSignedIn() && isOwner(userId);
        allow create: if isSignedIn() && isOwner(userId);
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if false; // Admin only

      match /claims/{userId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Subcollection under users for bonus claims
    match /users/{userId}/daily_bonus_claims/{campaignId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId);
    }
     match /users/{userId}/bonus_claims/{claimId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId);
    }

    match /chats/{chatId} {
        allow read, update: if isSignedIn() && request.auth.uid in resource.data.userIds;
        allow create: if isSignedIn();
        
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }

    match /friend_requests/{requestId} {
        allow read: if isSignedIn() && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
        allow create: if isSignedIn();
        allow delete: if isSignedIn() && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        
        match /participants/{userId} {
            allow read, create, update: if isOwner(userId);
        }
    }
    
     match /users/{userId}/active_campaigns/{campaignId} {
        allow read, create, update, delete: if isOwner(userId);
     }
     
     match /bonus_claims/{claimId} {
        allow create: if isSignedIn();
        allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
        allow update: if false; // Admin only
     }

  }
}

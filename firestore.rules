rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Any signed-in user can read public profile data
      allow read: if isSignedIn();
      // Only the user themselves or an admin can write to their document
      allow write: if isOwner(userId) || isAdmin();
    }

    // Subcollections under users
    match /users/{userId}/{collection}/{docId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    match /game_rooms/{roomId} {
      // Allow read for game rooms to any signed-in user
      allow read: if isSignedIn();
      // Write is complex:
      // - Creating: User must be signed in and be the creator
      // - Updating (joining, playing): User must be signed in and one of the players
      // - Deleting: Only creator can delete if game is waiting
      allow write: if isSignedIn();
    }

    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    match /transactions/{transactionId} {
      // Users can only read their own transactions
      allow read: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
      allow create: if isSignedIn(); // Allow creating transactions (deposits, withdrawals)
      // Only admin can update status
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    match /friend_requests/{requestId} {
        allow read, write: if isSignedIn();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn();
    }

    match /settings/{settingId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
        allow read: if isAdmin();
        allow create: if request.auth == null; // Allow unauthenticated users to apply
        allow update: if isAdmin();
    }
    
    // Bonus and Campaign Collections
    match /{collection}/{campaignId} {
      // Let any signed-in user read campaign details
      allow read: if isSignedIn() && (collection == 'daily_bonus_campaigns' || collection == 'deposit_bonus_campaigns' || collection == 'signup_bonus_campaigns' || collection == 'referral_campaigns');
      // Only admins can create/update/delete campaigns
      allow write: if isAdmin() && (collection == 'daily_bonus_campaigns' || collection == 'deposit_bonus_campaigns' || collection == 'signup_bonus_campaigns' || collection == 'referral_campaigns');
    }

    match /{collection}/{campaignId}/claims/{claimId} {
      // Let users read claims to check total count
      allow read: if isSignedIn();
      // Let users create their own claim document
      allow create: if isSignedIn() && (isOwner(claimId) || isOwner(request.resource.data.userId));
      allow write: if isAdmin();
    }
    
     match /bonus_claims/{claimId} {
        allow read, write: if isSignedIn();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /game_rooms/{roomId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid in resource.data.players;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid;
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
    }
    
     match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
    
    match /chats/{chatId}/messages/{messageId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.userIds[0] == request.auth.uid || get(/databases/$(database)/documents/chats/$(chatId)).data.userIds[1] == request.auth.uid;
    }
    
    match /transactions/{transactionId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        allow create: if request.auth != null;
    }
    
     match /marketing_applications/{appId} {
        allow create: if true;
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /notifications/{notificationId} {
        allow read: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
        allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /settings/{settingId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /signup_bonus_campaigns/{campaignId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /signup_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read: if request.auth != null && request.auth.uid == claimId;
        allow create: if request.auth != null && request.auth.uid == claimId;
    }
    
     match /daily_bonus_campaigns/{campaignId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /daily_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read, create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /referral_campaigns/{campaignId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
     match /users/{userId}/active_campaigns/{campaignId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /bonus_claims/{claimId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid && request.resource.data.status == 'pending';
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read/write their own data. Admins can read/write any user data.
    match /users/{userId} {
      allow read, update, delete: if isUser(userId) || isAdmin();
      allow create: if isSignedIn();
    }
    
    // Game rooms can be read by any signed-in user if public.
    // Users can only create/join/update rooms they are a part of.
    match /game_rooms/{roomId} {
      allow read: if isSignedIn() && (resource.data.isPrivate == false || request.auth.uid in resource.data.players);
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid in resource.data.players;
    }

    // Chat messages can only be read/written by participants in the chat.
    match /chats/{chatId} {
        allow read, update: if isSignedIn() && request.auth.uid in resource.data.users;
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }

    // Transactions can only be read by the user who owns them or an admin.
    // Users can create their own transactions.
    match /transactions/{transactionId} {
      allow read: if isUser(resource.data.userId) || isAdmin();
      allow create: if isUser(request.resource.data.userId);
      allow update: if isAdmin(); // Only admins can approve/reject
    }

    // Marketing applications can be created by anyone, but only read/updated by admins.
    match /marketing_applications/{appId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    
    // Notifications can only be accessed by the user they are for.
    match /notifications/{notifId} {
        allow read, create, update: if isUser(resource.data.userId) || isUser(request.resource.data.userId);
    }
    
    // Settings can be read by anyone, but only updated by admins (for bonus config)
    match /settings/{settingId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

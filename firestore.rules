rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to read their own user document and admins to read any
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      // Admins can read/write any user document
      allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    
       match /active_campaigns/{campaignDocId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

       match /daily_bonus_claims/{claimId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
       match /bonus_claims/{claimId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    match /game_rooms/{roomId} {
        allow read, create, update: if request.auth.uid != null;
        allow delete: if request.auth.uid == resource.data.createdBy.uid;

        match /messages/{messageId} {
            allow read, create: if request.auth.uid != null && request.auth.uid in resource.data.players;
        }
    }

    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.userIds;
      allow create: if request.auth.uid != null;
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid != null;
    }
    
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid != null;
      // Allow admins to read/write all transactions
      allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /marketing_applications/{appId} {
        allow create: if request.auth.uid == null; // Allow unauthenticated users to apply
        allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
     match /settings/{settingId} {
      // Admins can read/write all settings
      allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /friend_requests/{requestId} {
        allow read: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
        allow create: if request.auth.uid == request.resource.data.fromId;
        allow delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }

    // Bonus Campaign Rules
    match /signup_bonus_campaigns/{campaignId} {
      // Admins can do anything
      allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Logged-in users can read campaign details
      allow get, list: if request.auth.uid != null;

      match /claims/{claimId} {
        // Admins can do anything
        allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        // Users can check if they have claimed a bonus and see the total count
        allow get, list: if request.auth.uid != null;
        // Users can create a claim for themselves
        allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
       allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       allow get, list: if request.auth.uid != null;
       match /claims/{claimId} {
          allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
          allow get, list, create: if request.auth.uid != null;
       }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
       allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       allow get, list: if request.auth.uid != null;
       match /claims/{claimId} {
          allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
          allow get, list, create: if request.auth.uid != null;
       }
    }

    match /referral_campaigns/{campaignId} {
       allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       allow get, list: if request.auth.uid != null;
    }
    
     match /bonus_claims/{claimId} {
       allow read, write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       allow read, create: if request.auth.uid != null;
    }

  }
}
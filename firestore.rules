
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules cleaner
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USER-RELATED RULES
    match /users/{userId} {
      // Anyone can read a user's public profile data
      allow read: if isSignedIn();
      // A user can only write to their own document
      allow write: if isOwner(userId);
      // Admins can write to any user document
      allow write: if isAdmin();
      
      // Subcollections for users
      match /active_campaigns/{docId} {
        allow read, write: if isOwner(userId);
      }
      match /daily_bonus_claims/{docId} {
         allow read, write: if isOwner(userId);
      }
      match /bonus_claims/{docId} {
         allow read, write: if isOwner(userId);
      }
    }

    // GAME-RELATED RULES
    match /game_rooms/{roomId} {
      // Anyone can see the list of public games
      allow list: if isSignedIn();
      
      // Any player in the game can read its details in real-time
      allow read: if isSignedIn() && (resource.data.isPrivate == false || request.auth.uid in resource.data.players);

      // Anyone can create a new game room
      allow create: if isSignedIn();

      // Only the creator can cancel their waiting room, or a player can join it
      allow update: if isSignedIn() && (
        // Allow creator to cancel
        (request.auth.uid == resource.data.createdBy.uid && request.resource.data.status == 'cancelled') ||
        // Allow a second player to join
        (request.auth.uid in request.resource.data.players && !(request.auth.uid in resource.data.players) && resource.data.status == 'waiting' && request.resource.data.status == 'in-progress') ||
        // Allow players in the game to update it while in progress
        (request.auth.uid in resource.data.players && resource.data.status == 'in-progress')
      );
      
       // Only the creator can delete a waiting room
      allow delete: if isSignedIn() && request.auth.uid == resource.data.createdBy.uid && resource.data.status == 'waiting';

      // Chat messages within a game
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // TRANSACTION & BONUS RULES
    match /transactions/{transactionId} {
      // Users can only create transactions for themselves
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // Users can read their own transaction history
      allow read: if isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId);
      // Admins can read all transactions
      allow read: if isAdmin();
    }
    
    // Admins can read/write marketing applications
    match /marketing_applications/{appId} {
       allow read, write: if isAdmin();
       allow create: if isSignedIn();
    }

    // Bonus Campaigns are public to read for all signed-in users
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isSignedIn();
        allow write: if isOwner(claimId);
      }
    }
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
       match /claims/{claimId} {
        allow read: if isSignedIn();
        allow write: if isOwner(claimId);
      }
    }
     match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isSignedIn();
        allow write: if isOwner(claimId);
      }
    }
    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    match /bonus_claims/{claimId} {
        allow read: if isOwner(get(/databases/$(database)/documents/bonus_claims/$(claimId)).data.userId) || isAdmin();
        allow create: if isSignedIn();
        allow update: if isAdmin();
    }
    
    // Notifications can be read/written by the user they are for, or by an admin
    match /notifications/{notificationId} {
      allow read, write: if isOwner(get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId) || isAdmin();
      allow create: if isSignedIn();
    }
    
     // Settings can only be modified by admins
    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }

    // Chats between users
    match /chats/{chatId} {
      // Users can read/write to chats they are a part of
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.userIds;
      match /messages/{messageId} {
         allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
  }
}

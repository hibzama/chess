rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the users collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Users can only read/write their own document
      allow read, write: if request.auth.uid == userId || isAdmin(request.auth.uid);
    }

    // Rules for top-level collections
    match /settings/{settingId} {
      allow read: if true; // Public settings
      allow write: if isAdmin(request.auth.uid); // Only admins can change settings
    }
    
    match /marketing_applications/{appId} {
      allow read: if isAdmin(request.auth.uid);
      allow create: if true; // Anyone can apply
      allow update: if isAdmin(request.auth.uid);
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin(request.auth.uid);
    }

    // Rules for game rooms
    match /game_rooms/{roomId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Rules for all subcollections
    match /{path=**}/{collectionId}/{docId} {
      // User can access their own subcollections
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    // Explicit rules for collection groups to override the general subcollection rule
    match /{path=**}/bonus_claims/{claimId} {
        allow read, write: if isAdmin(request.auth.uid);
    }
    
    match /{path=**}/transactions/{transactionId} {
      allow read: if isAdmin(request.auth.uid) || get(/databases/$(database)/documents/$(path)).data.userId == request.auth.uid;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow admins to read/write anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // USERS
    match /users/{userId} {
      // Any authenticated user can read public profile data
      allow read: if request.auth != null;
      // Only the user themselves can write to their own document
      allow write: if request.auth.uid == userId;

      // Subcollections for a user can only be accessed by that user
      match /active_campaigns/{campaignDocId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
      match /bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /daily_bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // GAME ROOMS
    match /game_rooms/{roomId} {
      // Anyone authenticated can read a game room to see its status
      allow read: if request.auth != null;
      // Anyone authenticated can create a new game room
      allow create: if request.auth != null;
      // Only players in the game can update it or delete it (if they are the creator)
      allow update: if request.auth != null && request.auth.uid in resource.data.players;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid;
    }
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }
    
    // CHATS
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.userIds;
        allow create: if request.auth.uid in request.resource.data.userIds;
    }
     match /chats/{chatId}/messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }

    // FRIEND REQUESTS
    match /friend_requests/{requestId} {
        allow read, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
        allow create: if request.auth.uid == request.resource.data.fromId;
    }

    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid != null;
    }
    
    // TRANSACTIONS
    match /transactions/{transactionId} {
      // Users can only read their own transactions
      allow read: if request.auth.uid == resource.data.userId;
      // Users can only create transactions for themselves
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // MARKETING
    match /marketing_applications/{appId} {
        // Anyone can submit an application
        allow create: if request.auth == null; 
        allow read, update: if isAdmin();
    }
    
    // SETTINGS, BONUSES, CAMPAIGNS (Publicly Readable by logged-in users)
    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
    }
    match /daily_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
    }
    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
    }
    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
    }

    // CLAIMS SUBCOLLECTIONS (inside campaigns)
    match /signup_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, create: if request.auth.uid == userId;
    }
    match /daily_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, create: if request.auth.uid == userId;
    }
    match /deposit_bonus_campaigns/{campaignId}/claims/{userId} {
        allow read, create: if request.auth.uid == userId;
    }

    // COLLECTION GROUP for bonus claims (used by admin panel)
     match /{path=**}/bonus_claims/{claimId} {
      allow read, update: if isAdmin();
      // Allow users to create their own claims
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}

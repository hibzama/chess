rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId) && !exists(/databases/$(database)/documents/users/$(userId));
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      match /active_campaigns/{campaignId} { allow read, write: if isOwner(userId); }
      match /bonus_claims/{claimId} { allow read, write: if isOwner(userId); }
      match /daily_bonus_claims/{claimId} { allow read, write: if isOwner(userId); }
    }
    
    match /game_rooms/{roomId} {
      // Allow signed-in users to list public, waiting games. This is for the lobby.
      allow list: if isSignedIn() && resource.data.isPrivate == false && resource.data.status == 'waiting';
      // Allow any signed-in user to read any game room's details (e.g., when joining via ID).
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.createdBy.uid);
      allow update: if isSignedIn() && (isOwner(resource.data.createdBy.uid) || (resource.data.player2 != null && isOwner(resource.data.player2.uid)) || isAdmin());
      allow delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);
      
      match /messages/{messageId} {
        allow read, write: if isSignedIn() && request.auth.uid in resource.data.players;
      }
    }
    
    match /transactions/{transactionId} {
      allow read, list: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update: if isAdmin();
    }
    
    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
      allow delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
     match /chats/{chatId} {
        allow read, write, list: if isSignedIn() && request.auth.uid in chatId.split('_');
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in chatId.split('_');
        }
    }

    match /notifications/{notificationId} {
        allow read, list, update: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    match /marketing_applications/{appId} {
        allow create: if true; 
        allow read, update, delete: if isAdmin();
    }

    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isOwner(claimId) || isAdmin();
        allow create: if isOwner(claimId);
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isOwner(claimId) || isAdmin();
        allow create: if isOwner(claimId);
      }
    }

    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
       match /claims/{claimId} {
        allow read: if isOwner(claimId) || isAdmin();
        allow create: if isOwner(claimId);
      }
    }
    
     match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /bonus_claims/{claimId} {
        allow read, write: if isAdmin();
        allow create: if isSignedIn();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their user document shows they are an admin.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS
    // Admins can read/write any user document.
    // Users can read their own document.
    // Users can be created by anyone (for registration).
    // Users can only update their own document, but cannot change their role or balance.
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId
                    && request.resource.data.role == resource.data.role
                    && request.resource.data.balance == resource.data.balance;
    }

    // TRANSACTIONS
    // Admins can read/write any transaction.
    // Users can create their own transactions (for deposits/withdrawals).
    // Users can read their own transactions.
    match /transactions/{transactionId} {
      allow read, write: if isAdmin();
      allow create, read: if request.auth.uid != null && request.auth.uid == request.resource.data.userId;
    }
    
    // GAME ROOMS
    // Admins can read/write any game room.
    // Authenticated users can create game rooms.
    // Players in a game can read/update the room they are in.
    match /game_rooms/{roomId} {
        allow read, write: if isAdmin();
        allow create: if request.auth.uid != null;
        allow read, update: if request.auth.uid != null && request.auth.uid in resource.data.players;
    }

    // MARKETING APPLICATIONS
    // Admins can read/write applications.
    // Anyone can create an application (for sign-ups).
    match /marketing_applications/{appId} {
        allow read, write: if isAdmin();
        allow create;
    }

    // CHATS
    // Users can read/write chat documents they are a part of.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.users;
      // Messages subcollection
       match /messages/{messageId} {
         allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
       }
    }
    
    // NOTIFICATIONS
    // Users can read/write their own notifications.
    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // SETTINGS (For Bonus Page)
    // Only admins can read/write settings.
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    // FRIEND REQUESTS
    // Users can create requests.
    // Users can read/delete requests sent to them.
    match /friend_requests/{reqId} {
        allow create: if request.auth.uid == request.resource.data.fromId;
        allow read, delete: if request.auth.uid == resource.data.toId;
    }
  }
}

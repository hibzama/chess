rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isJoiningGame(requestData, resourceData) {
      return resourceData.status == 'waiting' && requestData.status == 'in-progress' && requestData.player2.uid == request.auth.uid;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId) || isAdmin();
      
      // Allow users to access their own subcollections
      match /{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (isOwner(resource.data.createdBy.uid) || isJoiningGame(request.resource.data, resource.data) || isAdmin());
      allow delete: if request.auth != null && (isOwner(resource.data.createdBy.uid) || isAdmin());

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.players;
      }
    }
    
    // Explicitly allow reading of all bonus campaign collections
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read, write: if isAdmin();
      }
    }
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read, write: if isAdmin();
      }
    }
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read, write: if isAdmin();
      }
    }
    match /referral_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Rule for the bonus_claims collection group
    match /{path=**}/bonus_claims/{claimId} {
       allow read, write: if isAdmin();
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /transactions/{transactionId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isAdmin();
    }

    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
    }
    
    match /marketing_applications/{appId} {
        allow create: if request.auth == null || request.auth != null; // Allow unauthed users to apply
        allow read, update, delete: if isAdmin();
    }
    
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
  }
}

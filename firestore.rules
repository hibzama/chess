rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create;

      // Allow users to read their own active campaign document
      match /active_campaigns/{docId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Allow admins full access to user data
    match /users/{userId}/{document=**} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /game_rooms/{roomId} {
      allow read, create;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.createdBy.uid || request.auth.uid in resource.data.players);
       match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    match /chats/{chatId} {
        allow read, update: if request.auth != null && request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }

    match /transactions/{transactionId} {
      allow read, create: if request.auth != null;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /marketing_applications/{appId} {
        allow create;
        allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /settings/{settingId} {
        allow read;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /notifications/{notifId} {
        allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create: if request.auth != null; // Server-side or trusted clients
    }
    
    match /friend_requests/{reqId} {
        allow read, create: if request.auth != null;
        allow update, delete: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
    // Admins can manage all bonus campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /deposit_bonus_campaigns/{campaignId}/{document=**} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /referral_bonus_config/{docId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /tasks/{campaignId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the referral campaigns feature
    match /referral_campaigns/{campaignId} {
        // Authenticated users can read the campaign details
        allow read: if request.auth != null;
        // Admins can write
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for bonus claims
    match /bonus_claims/{claimId} {
      // Admins can manage all claims
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Users can create claims, and read their own claims
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}

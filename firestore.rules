rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Anyone can count users (for the bonus card)
      allow get: if request.method == 'count';
      // Only the user themselves can read or write to their own document
      allow read, write: if isUser(userId);
      // Logged-in users can read public profiles of others
      allow read: if isSignedIn();
    }
    
    match /game_rooms/{roomId} {
      // Anyone can read public rooms from the lobby
      allow list: if resource.data.isPrivate == false;
      // Anyone can read a single game room document (to check status before joining)
      allow get: if isSignedIn();
      // Only a logged-in user can create a room, and they must be in the players list
      allow create: if isSignedIn() && request.resource.data.players[0] == request.auth.uid;
      // Only a player in the game can update or delete it
      allow update, delete: if isSignedIn() && resource.data.players.hasAny([request.auth.uid]);
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      // Only players in the game can read or send messages
      allow read, create: if isSignedIn() && get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players.hasAny([request.auth.uid]);
    }

    match /transactions/{transactionId} {
      // A user can only create or read their own transactions
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /friend_requests/{requestId} {
        // A user can create a request if they are the sender
        allow create: if isSignedIn() && request.resource.data.fromId == request.auth.uid;
        // The sender or receiver can read or delete the request
        allow read, delete: if isSignedIn() && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
        // Only the receiver can update the request (to accept/decline)
        allow update: if isSignedIn() && resource.data.toId == request.auth.uid;
    }
    
    match /notifications/{notificationId} {
      // A user can only access their own notifications
      allow read, update: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Anyone can create a notification (e.g. system-sent)
      allow create: if true; 
    }
    
    match /marketing_applications/{applicationId} {
        // Anyone can create an application
        allow create: if true;
        // Admins can read/update/delete
        allow read, update, delete: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
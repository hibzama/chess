rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow read, update: if isAdmin();
    }

    match /users/{userId}/{subcollection}/{docId} {
      allow read, write: if request.auth.uid == userId;
      allow read: if isAdmin();
    }
    
    match /transactions/{transactionId} {
      // Allow user to read/write their own transactions
      allow read, write: if request.auth.uid == resource.data.userId;
      // Allow admin to read/update any transaction
      allow read, update: if isAdmin();
    }

    match /marketing_applications/{appId} {
        allow create;
        allow read, update: if isAdmin();
    }

    match /game_rooms/{roomId} {
        allow read; // All users can read game rooms
        allow create: if request.auth != null;
        // Only creator can update/delete a waiting room
        allow update, delete: if request.auth.uid == resource.data.createdBy.uid && resource.data.status == 'waiting';
        // Only players in the game can update an in-progress game
        allow update: if request.auth.uid in resource.data.players && resource.data.status == 'in-progress';
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.users;
      allow create: if request.auth != null;
    }
    
    match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
    }
    
    match /settings/{settingId} {
        allow read;
        allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null; // Allow backend function to create
    }
    
    match /friend_requests/{requestId} {
        allow read, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
        allow create: if request.auth != null;
    }
    
    match /bonuses/{bonusId} {
        allow read;
        allow write: if isAdmin();
    }

    match /dailyBonusClaims/{bonusId} {
        allow read;
        allow write: if request.auth != null;
    }

    match /referral_tasks/{taskId} {
        allow read;
        allow write: if isAdmin();
    }

    match /bonus_claims/{claimId} {
        allow create: if request.auth.uid == request.resource.data.newUserId || request.auth.uid == request.resource.data.referrerId;
        allow read, update: if isAdmin();
    }
  }
}

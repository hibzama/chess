rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow a user to create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow only the authenticated user to read or update their own data
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // Do not allow client-side deletes
      allow delete: if false;
    }

    match /game_rooms/{roomId} {
        // Allow reads if user is a player, allow create/update if authenticated
        allow read: if request.auth != null && resource.data.players.hasAny([request.auth.uid]);
        allow create, update: if request.auth != null;
        // Only the creator can delete a waiting room
        allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid && resource.data.status == 'waiting';

        // Messages subcollection
        match /messages/{messageId} {
            allow read, create: if request.auth != null && exists(/databases/$(database)/documents/game_rooms/$(roomId)) && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }
    
    match /marketing_applications/{appId} {
      // Allow anyone to submit an application
      allow create: if true;
      // Disallow read and update from client-side
      allow read, update, delete: if false;
    }

    // Allow logged-in users to manage their own notifications and friend requests
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
    }

     match /friend_requests/{requestId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.fromId;
        allow delete: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
    // Allow users to see bonus configs
    match /settings/{settingId} {
        allow get: if true;
    }

    // Allow read-only access to campaigns
    match /referral_campaigns/{campaignId} {
        allow get: if true;
    }
     match /daily_bonus_campaigns/{campaignId} {
        allow get: if true;
    }
    match /deposit_bonus_campaigns/{campaignId} {
        allow get: if true;
    }

    match /users/{userId}/active_campaigns/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
     match /users/{userId}/daily_bonus_claims/{claimId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /bonus_claims/{claimId} {
        allow create: if request.auth != null;
    }
  }
}

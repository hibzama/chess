rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Users can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Any authenticated user can read languages for the dropdown
    match /languages/{document=**} {
      allow read: if request.auth != null;
    }

    // Admins have full access to everything else.
    // This rule needs to be specific to collections admins need.
    // Let's grant it for the collections used in the admin panel.
    match /signup_bonus_campaigns/{document=**} {
      allow read, write: if isAdmin();
    }
    match /deposit_bonus_campaigns/{document=**} {
      allow read, write: if isAdmin();
    }
    match /daily_bonus_campaigns/{document=**} {
      allow read, write: if isAdmin();
    }
    match /referral_campaigns/{document=**} {
      allow read, write: if isAdmin();
    }
    match /tasks/{document=**} {
      allow read, write: if isAdmin();
    }
     match /bonus_claims/{document=**} {
      allow read, write: if isAdmin();
    }
    match /transactions/{document=**} {
      allow read, write: if isAdmin();
    }
     match /game_rooms/{document=**} {
      // Users need to read/write game rooms they are in.
      allow read, write: if request.auth != null;
    }
     match /marketing_applications/{document=**} {
      // Allow anyone to create an application, but only admin to read/update.
      allow create: if request.auth == null || request.auth != null;
      allow read, update, delete: if isAdmin();
    }
     match /settings/{document=**} {
      allow read, write: if isAdmin();
    }

    // Admins can also write to the languages collection
    match /languages/{document=**} {
        allow write: if isAdmin();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // General user data
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow a user to update their own profile, BUT NOT their balance or role directly.
      // Balance can only be changed via the specific transaction rule below.
      allow update: if request.auth != null && request.auth.uid == userId
                    && !('balance' in request.resource.data)
                    && !('bonusBalance' in request.resource.data)
                    && !('marketingBalance' in request.resource.data)
                    && !('role' in request.resource.data);

      // Allow a user to update their balance ONLY IF they are also enrolling in an event
      // in the same transaction. This is the key fix.
      allow update: if request.auth != null && request.auth.uid == userId
                    && existsAfter(/databases/$(database)/documents/users/$(userId)/event_enrollments/$(request.resource.data.enrollingEventId))
                    && getAfter(/databases/$(database)/documents/users/$(userId)).data.balance - request.resource.data.balance == request.resource.data.enrollingEventFee;
                    
       match /event_enrollments/{enrollmentId} {
        allow read, create: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId;
        
         match /progress_history/{progressId} {
            allow read: if request.auth != null && request.auth.uid == userId;
        }
      }
    }
    
    match /events/{eventId} {
        allow read;
    }

    // Admins can manage events
    match /events/{eventId} {
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Admins can read event enrollments
    match /event_enrollments/{eventId}/users/{userId} {
      allow list, get: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Game rooms
    match /game_rooms/{roomId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy.uid;
      allow update: if request.auth != null && request.auth.uid in resource.data.players;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    // Transactions
    match /transactions/{transactionId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Friend Requests
     match /friend_requests/{requestId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.fromId;
      allow delete: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
     match /marketing_applications/{applicationId} {
        allow create;
        allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
     }

    // Chats
    match /chats/{chatId} {
        allow read, update: if request.auth != null && request.auth.uid in resource.data.users;
        allow create: if request.auth != null;
        
        match /messages/{messageId} {
             allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }

    // Notifications
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
    }
    
    // Settings (Bonuses, Mailer Config)
    match /settings/{settingId} {
      allow read;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /bonuses/{bonusId} {
        allow read;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
     match /dailyBonusClaims/{bonusId} {
        allow read, update, create: if request.auth != null;
    }
  }
}

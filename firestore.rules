rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    // USER MANAGEMENT
    match /users/{userId} {
      // Admins can do anything. Users can only read/write their own data.
      // Other authenticated users can read a user's data for profiles/games, but cannot see sensitive fields.
      allow read: if isAdmin() || isOwner(userId) || (isAuthenticated() && !('marketingBalance' in resource.data));
      allow write: if isAdmin() || isOwner(userId);
      
      // Allow specific subcollections for users
      match /daily_bonus_claims/{campaignId} {
        allow read, create: if isOwner(userId);
      }
      match /bonus_claims/{claimId} {
        allow read, create: if isOwner(userId);
      }
      match /active_campaigns/{campaignDocId} {
        allow read, create, update, delete: if isOwner(userId);
      }
    }

    // GAME ROOMS
    match /game_rooms/{roomId} {
      // Anyone authenticated can see public games. Admins can see all.
      allow list, get: if isAuthenticated() || isAdmin();
      // Users can only create rooms for themselves. Admins can create anything.
      allow create: if isOwner(request.resource.data.createdBy.uid) || isAdmin();
      // Room can be updated by a player in the game, or an admin.
      allow update: if request.auth.uid in resource.data.players || isAdmin();
      // Room can only be deleted by its creator.
      allow delete: if isOwner(resource.data.createdBy.uid) || isAdmin();
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // TRANSACTIONS
    match /transactions/{transactionId} {
      // Admins can see all transactions. Users can only see their own.
      allow list, get: if isAdmin() || isOwner(resource.data.userId);
      // Users can create transactions for themselves (deposit/withdrawal requests).
      allow create: if isOwner(request.resource.data.userId);
      // Only admins can approve/reject transactions.
      allow update: if isAdmin();
    }
    
    // CHATS
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    // NOTIFICATIONS
    match /notifications/{notificationId} {
        allow read, update: if isOwner(resource.data.userId);
    }
    
    // MARKETING APPLICATIONS
    match /marketing_applications/{appId} {
        allow create: if !isAuthenticated(); // Anyone can apply
        allow read, update: if isAdmin(); // Only admins can manage
    }
    
    // REFERRAL CAMPAIGNS
    match /referral_campaigns/{campaignId} {
        allow list, get: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }
    
    // BONUS CAMPAIGNS
    match /signup_bonus_campaigns/{campaignId} {
        allow get, list: if isAuthenticated();
        allow create, update, delete: if isAdmin();

        match /claims/{userId} {
            allow create: if isOwner(userId);
            allow read: if isOwner(userId) || isAdmin();
        }
    }
     match /daily_bonus_campaigns/{campaignId} {
        allow get, list: if isAuthenticated();
        allow create, update, delete: if isAdmin();

        match /claims/{userId} {
            allow create: if isOwner(userId);
            allow read: if isOwner(userId) || isAdmin();
        }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow get, list: if isAuthenticated();
        allow create, update, delete: if isAdmin();
         match /claims/{userId} {
            allow create: if isOwner(userId);
            allow read: if isOwner(userId) || isAdmin();
        }
    }
    
    // Bonus claims made by referees (for referral campaigns)
    match /bonus_claims/{claimId} {
        allow read, create: if isOwner(request.resource.data.userId);
        allow update: if isAdmin();
    }
    
    // GLOBAL SETTINGS
    match /settings/{settingId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
  }
}
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isGettingOwnData() {
      return isSignedIn() && isOwner(resource.data.uid);
    }
    
    function isUpdatingOwnData(userId) {
      return isSignedIn() && isOwner(userId);
    }
    
    // USERS
    // Users can:
    // - Read their own document.
    // - Create their own document upon registration.
    // - Update their own document.
    // - Be updated by another user ONLY if it's part of a valid game transaction (join, payout, etc).
    match /users/{userId} {
      allow read; // Allow reading of other user profiles for friends list, etc.
      allow create: if isSignedIn() && isOwner(request.resource.data.uid);
      
      // Allow updates by the owner OR if part of a game transaction.
      // This is crucial for deducting wagers from both players when a game starts.
      allow update: if isUpdatingOwnData(userId) || (isSignedIn() && existsAfter(/databases/$(database)/documents/game_rooms/$(request.resource.data.gameRoomId)));
    }
    
    // GAME ROOMS
    // Users can:
    // - Create a game room.
    // - Read any public, waiting game room (for the lobby).
    // - Read and update a room they are a player in.
    // - Delete a room they created IF it's still waiting.
    match /game_rooms/{roomId} {
      allow create: if isSignedIn() && request.resource.data.createdBy.uid == request.auth.uid;
      allow read, list: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid in resource.data.players;
      allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid && resource.data.status == 'waiting';
    }

    // GAME CHAT (MESSAGES subcollection)
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }
    
    // TRANSACTIONS
    // Users can:
    // - Create their own transactions (deposit, withdrawal).
    // - Read their own transaction history.
    match /transactions/{transactionId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    // NOTIFICATIONS
    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // FRIEND REQUESTS
    match /friend_requests/{requestId} {
        allow read, create, delete: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid || resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
    }
    
    // MARKETING APPLICATIONS
    match /marketing_applications/{appId} {
        allow create; // Anyone can apply
    }
    
    // BONUS CAMPAIGNS & SETTINGS (Read-only for users)
    match /signup_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        match /claims/{claimId} {
            allow read, write: if isSignedIn() && isOwner(claimId);
        }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        match /claims/{claimId} {
            allow read: if isSignedIn();
        }
    }
    
    match /users/{userId}/daily_bonus_claims/{claimId} {
        allow read, write: if isUpdatingOwnData(userId);
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
         match /claims/{claimId} {
            allow read, write: if isSignedIn() && isOwner(claimId);
        }
    }
    
     match /referral_campaigns/{campaignId} {
      allow read, list: if isSignedIn();
    }
    
    match /bonus_claims/{claimId} {
        allow create: if isSignedIn();
        allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    match /users/{userId}/active_campaigns/{campaignState} {
        allow read, write, delete: if isUpdatingOwnData(userId);
    }
    
    match /users/{userId}/bonus_claims/{claimId} {
       allow read, write: if isUpdatingOwnData(userId);
    }
    
    match /settings/referralBonusConfig {
        allow read: if isSignedIn();
    }
  }
}

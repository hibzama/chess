rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    //---------------------------------------------------------
    // Utility Functions
    //---------------------------------------------------------
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    //---------------------------------------------------------
    // User Management Rules
    //---------------------------------------------------------
    match /users/{userId} {
      allow read: if true;
      allow create: if !isSignedIn();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      match /daily_bonus_claims/{campaignId} {
        allow read, write: if isOwner(userId);
      }

      match /bonus_claims/{claimId} {
        allow read, write: if isOwner(userId);
      }
      
      match /active_campaigns/{campaignDocId} {
          allow read, write, delete: if isOwner(userId);
      }
    }
    
    //---------------------------------------------------------
    // Game Room Rules
    //---------------------------------------------------------
    match /game_rooms/{roomId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (resource.data.status == 'waiting' || request.auth.uid in resource.data.players);
      allow delete: if isSignedIn() && request.auth.uid == resource.data.createdBy.uid;

      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    //---------------------------------------------------------
    // Transaction & Notification Rules
    //---------------------------------------------------------
    match /transactions/{transactionId} {
      allow read, create, update: if isSignedIn() || isAdmin();
    }
    
    match /notifications/{notificationId} {
       allow read, create: if isSignedIn();
       allow update, delete: if isOwner(get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId);
    }
    
    //---------------------------------------------------------
    // Marketing Rules
    //---------------------------------------------------------
    match /marketing_applications/{appId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    //---------------------------------------------------------
    // Settings & Config Rules (Admin only for write)
    //---------------------------------------------------------
    match /settings/{settingId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    //---------------------------------------------------------
    // Bonus & Campaign Rules (Read for users, write for admin)
    //---------------------------------------------------------
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      
      match /claims/{claimId} {
        allow read: if true;
        allow write: if isSignedIn();
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      
      match /claims/{claimId} {
        allow read: if true;
        allow write: if isSignedIn();
      }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();

       match /claims/{claimId} {
        allow read: if true;
        allow write: if isSignedIn();
      }
    }
    
    match /referral_campaigns/{campaignId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow read, list, write: if isSignedIn() || isAdmin();
    }
  }
}

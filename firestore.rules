rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isUser(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isMarketer() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'marketer';
    }
    
    // User Management
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isUser(userId) || isAdmin();
      
      // Allow users to read their own subcollections
      match /active_campaigns/{docId} {
        allow read, write, delete: if isUser(userId) || isAdmin();
      }
      match /daily_bonus_claims/{docId} {
        allow read, write: if isUser(userId) || isAdmin();
      }
      match /bonus_claims/{docId} {
        allow read, write: if isUser(userId) || isAdmin();
      }
    }
    
    // Game Rooms
    match /game_rooms/{roomId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.createdBy.uid == request.auth.uid;
      allow update: if isAuth() && request.auth.uid in resource.data.players;
      allow delete: if isAuth() && resource.data.createdBy.uid == request.auth.uid;

      match /messages/{messageId} {
        allow read: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        allow create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    // Chats
    match /chats/{chatId} {
        allow read, write: if isAuth() && request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }

    // Transactions & Admin-Only Collections
    match /transactions/{transactionId} {
      allow read: if isUser(resource.data.userId) || isAdmin();
      allow create: if isAuth();
      allow update: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
      allow read, update: if isAdmin();
      allow create: if true;
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, update: if isAuth() && request.auth.uid == resource.data.userId;
      allow create: if true; // Allow server-side creation
    }

    // Settings
    match /settings/{settingId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Bonus & Campaign Collections
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if isAuth();
        allow write: if isAdmin();
        match /claims/{claimId} {
          allow read, write: if isAdmin() || isUser(claimId);
        }
    }

    match /daily_bonus_campaigns/{campaignId} {
        allow read: if isAuth();
        allow write: if isAdmin();
        match /claims/{claimId} {
          allow read, write: if isAdmin() || isUser(claimId);
        }
    }

    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if isAuth();
        allow write: if isAdmin();
        match /claims/{claimId} {
            allow read, write: if isAdmin() || isUser(claimId);
        }
    }
    
    match /referral_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow read: if isAuth() && (request.auth.uid == resource.data.userId || isAdmin());
        allow list: if isAuth(); // For user to query their own claims
        allow create: if isAuth();
        allow update: if isAdmin();
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isMarketer() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'marketer';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isJoiningGame(request, resource) {
      return request.resource.data.status == 'in-progress' && resource.data.status == 'waiting';
    }

    // Users Collection
    match /users/{userId} {
      allow read: if request.auth != null; // Allow any authenticated user to read user profiles
      allow create: if request.auth == null || isOwner(userId); // Allow creation on signup or for self
      allow update: if isOwner(userId) || isAdmin();

      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Game Rooms Collection
    match /game_rooms/{roomId} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.createdBy.uid);
      allow update: if (isOwner(request.resource.data.player2.uid) && isJoiningGame(request, resource)) || isAdmin() || request.auth.uid in resource.data.players;
      allow delete: if isOwner(resource.data.createdBy.uid) || isAdmin();
      
       match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // Chats Collection
    match /chats/{chatId} {
        allow read, create, update: if request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    // Transactions, Notifications, Marketing Applications
    match /transactions/{transactionId} {
      allow read: if isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }

    match /notifications/{notificationId} {
        allow read, update: if isOwner(get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId);
        allow create: if request.auth != null;
    }

     match /marketing_applications/{appId} {
        allow read: if isAdmin();
        allow create: if request.auth == null; // Anyone can apply
        allow update: if isAdmin();
    }
    
    // Settings Collection
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Bonus and Campaign Collections
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if true;
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isAdmin() || isOwner(claimId);
        allow create: if isOwner(claimId);
      }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
       match /claims/{claimId} {
        allow read: if isAdmin() || isOwner(claimId);
        allow create: if isOwner(claimId);
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isAdmin() || isOwner(claimId);
        allow create: if isOwner(claimId);
      }
    }

    match /referral_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
      allow read, create, update: if isOwner(get(/databases/$(database)/documents/bonus_claims/$(claimId)).data.userId) || isAdmin() || isOwner(request.resource.data.userId);
    }
  }
}

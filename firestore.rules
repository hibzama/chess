
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      // Anyone can create a user account (signup)
      allow create: if true;
      // Users can only read/write their own data. Admins can read/write any user data.
      allow read, update, delete: if isSignedIn() && (isOwner(userId) || isAdmin());

      // Subcollections for users
      match /active_campaigns/{docId} {
        allow read, write, delete: if isOwner(userId);
      }
      match /daily_bonus_claims/{docId} {
        allow read, write, delete: if isOwner(userId);
      }
      match /bonus_claims/{docId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Game Rooms
    match /game_rooms/{roomId} {
      allow read: if isSignedIn();
      // Only signed in users can create rooms.
      allow create: if isSignedIn();
      // Only players in the game or admins can update/delete a room.
      allow update, delete: if isSignedIn() && (resource.data.createdBy.uid == request.auth.uid || request.auth.uid in resource.data.players || isAdmin());
      
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && (request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players);
      }
    }
    
    // Transactions
    match /transactions/{transactionId} {
        allow create: if isSignedIn();
        allow read, update, delete: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
    }

    // Notifications
    match /notifications/{notificationId} {
        allow create: if true;
        allow read, update: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    // Settings & Configs
    match /settings/{docId} {
        allow read: if true; // Allow reading settings like bonus configs
        allow write: if isAdmin(); // Only admins can change settings
    }
    
    // Bonus Campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if true;
        allow write: if isAdmin();
        match /claims/{claimId} {
            allow read: if true;
            allow create: if isSignedIn() && isOwner(claimId); // Users can claim for themselves
        }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
        allow read: if true;
        allow write: if isAdmin();
        match /claims/{claimId} {
            allow read: if true;
            allow create: if isSignedIn() && isOwner(claimId);
        }
    }

    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if true;
        allow write: if isAdmin();
        match /claims/{claimId} {
            allow read: if true;
            allow create: if isSignedIn() && isOwner(claimId);
        }
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Bonus Claims (for admin review)
    match /bonus_claims/{claimId} {
        allow create: if isSignedIn();
        allow read, write, delete: if isAdmin() || (isSignedIn() && isOwner(resource.data.userId));
    }
    
    // Friend Requests
    match /friend_requests/{requestId} {
      allow create: if isSignedIn() && request.resource.data.fromId == request.auth.uid;
      allow read, delete: if isSignedIn() && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid || isAdmin());
    }
    
    // Marketing Applications
    match /marketing_applications/{appId} {
        allow create: if true;
        allow read, write: if isAdmin();
    }
    
    // Chats
    match /chats/{chatId} {
        allow read, update: if isSignedIn() && request.auth.uid in resource.data.userIds;
        
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
  }
}

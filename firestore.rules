rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isPlayerInGame(gameId) {
      return isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(gameId)).data.players;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if !isAuthenticated() || isUser(userId); // Allow creation during signup
      allow update: if isUser(userId) || isRole('admin');
      allow delete: if isRole('admin');
      
      match /daily_bonus_claims/{claimId} {
        allow read, create: if isUser(userId);
      }
    }

    // Game Rooms Collection
    match /game_rooms/{gameId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isPlayerInGame(gameId);
      allow delete: if isPlayerInGame(gameId) || isRole('admin');
      
      match /messages/{messageId} {
        allow read, create: if isPlayerInGame(gameId);
      }
    }
    
    // Transactions
    match /transactions/{transactionId} {
      allow read: if isUser(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId) || isRole('admin');
      allow create: if isAuthenticated();
      allow update: if isRole('admin');
    }
    
    // Friend Requests
    match /friend_requests/{requestId} {
      allow read: if isAuthenticated() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
    // Notifications
    match /notifications/{notificationId} {
       allow read: if isUser(get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId);
       allow create: if isAuthenticated(); // Functions create these
       allow update: if isUser(get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId);
    }
    
    // Chats
    match /chats/{chatId} {
      allow read, update: if isAuthenticated() && request.auth.uid in resource.data.userIds;
      allow create: if isAuthenticated();
      
      match /messages/{messageId} {
        allow read, create: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
    
    // Marketing Applications
    match /marketing_applications/{appId} {
      allow create; // Anyone can apply
      allow read, update, delete: if isRole('admin');
    }
    
    // Bonus & Tasks (Admin write, users read)
    match /referral_tasks/{taskId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isRole('admin');
    }
    
     match /bonus_claims/{claimId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isRole('admin');
    }

    match /bonuses/{bonusId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isRole('admin');
    }

    match /dailyBonusClaims/{bonusId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated(); // Users/functions update counts
    }

    // Settings (Admin only)
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isRole('admin');
    }
  }
}

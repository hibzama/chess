
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read;
      allow create: if request.resource.data.uid == request.auth.uid;
      allow update: if isOwner(userId) || 
      // Allow joining a game to update balances
      (exists(/databases/$(database)/documents/game_rooms/$(request.resource.data.gameRoomId)) &&
       request.resource.data.balance == resource.data.balance - get(/databases/$(database)/documents/game_rooms/$(request.resource.data.gameRoomId)).data.wager) ||
      // Allow payouts
      (request.resource.data.balance == resource.data.balance + get(/databases/$(database)/documents/transactions/$(request.resource.data.transactionId)).data.amount);
    }

    match /game_rooms/{roomId} {
      allow read;
      allow create: if isSignedIn() && request.resource.data.createdBy.uid == request.auth.uid;
      allow update: if isSignedIn() && (
        // Allow joining a game
        (resource.data.status == 'waiting' && request.resource.data.status == 'in-progress' && request.auth.uid in request.resource.data.players) ||
        // Allow game moves by players
        (request.auth.uid in resource.data.players && request.resource.data.status == 'in-progress') ||
        // Allow completing the game
        request.resource.data.status == 'completed'
      );
      allow delete: if resource.data.createdBy.uid == request.auth.uid;

      match /messages/{messageId} {
        allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    match /chats/{chatId} {
        allow read, update: if isSignedIn() && request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }

    match /transactions/{transactionId} {
      allow read, create: if isSignedIn();
      allow update: if isSignedIn(); // For admin actions
    }

    match /notifications/{notificationId} {
      allow read, write: if isSignedIn();
    }
    
    match /friend_requests/{requestId} {
        allow read, write, delete: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
        allow create: if !isSignedIn();
        allow read, update: if isSignedIn(); // for admins
    }

    // Bonus Systems
    match /settings/referralBonusConfig {
        allow read: if isSignedIn();
    }

    match /signup_bonus_campaigns/{campaignId} {
      allow read;
      match /claims/{claimId} {
        allow read: if request.auth.uid == claimId;
        allow write: if request.auth.uid == claimId;
      }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
      allow read;
      match /claims/{claimId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn();
      }
    }

    match /deposit_bonus_campaigns/{campaignId} {
      allow read;
       match /claims/{claimId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn();
      }
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
    }

    match /users/{userId}/daily_bonus_claims/{claimId} {
        allow read, write: if isOwner(userId);
    }
    
     match /users/{userId}/bonus_claims/{claimId} {
        allow read, write: if isOwner(userId);
    }

    match /bonus_claims/{claimId} {
      allow read, write: if isSignedIn();
    }
  }
}

    
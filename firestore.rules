rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read/write their own data, and admins can read/write any user data.
    // Other authenticated users can read public profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
       // Subcollections for a user
      match /daily_bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /active_campaigns/{campaignId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Admins can read/write all settings documents.
    // Authenticated users can read settings for client-side logic.
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read/write marketing applications
    match /marketing_applications/{appId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth == null; // Allow unauthenticated users to apply
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Players in a game room can read/update it.
    match /game_rooms/{roomId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.createdBy.uid;
        allow update: if request.auth.uid in resource.data.players;
        allow delete: if request.auth.uid == resource.data.createdBy.uid;
        
        // Chat messages within a game room
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }
    
    // Private chats between two users
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.userIds;
      allow create: if request.auth.uid in request.resource.data.userIds;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
    
    // Notifications for a user
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }
    
    // Transactions
    match /transactions/{transactionId} {
        allow read, create: if request.auth.uid == resource.data.userId;
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Friend Requests
    match /friend_requests/{requestId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if request.auth != null && request.resource.data.fromId == request.auth.uid;
      allow delete: if request.auth != null && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
    }
    
    // Bonus Systems
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Allow users to create their own claim document
      match /claims/{userId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
    }

    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /bonus_claims/{claimId} {
        allow read: if request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}

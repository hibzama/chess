
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow read: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }
    
    match /transactions/{transactionId} {
       allow create: if request.auth.uid == request.resource.data.userId;
       allow read, update, delete: if isAdmin() || request.auth.uid == resource.data.userId;
    }
    
    match /game_rooms/{roomId} {
       allow read, create: if request.auth != null;
       allow update: if request.auth.uid in resource.data.players;
       allow delete: if request.auth.uid == resource.data.createdBy.uid || isAdmin();
    }

    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.users;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      }
    }
    
    match /friend_requests/{requestId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.fromId || request.auth.uid == request.resource.data.toId;
    }
    
    match /notifications/{notificationId} {
       allow read, update: if request.auth.uid == resource.data.userId;
       allow create: if request.auth != null; // Server/functions should have more fine-grained control
    }
    
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}

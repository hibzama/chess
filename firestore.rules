rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow anyone to create a user account (for registration)
      allow create: if true;
      // Allow users to read any user document (for leaderboards, profiles, game joining)
      // and admins to do anything.
      allow read: if request.auth != null || isAdmin();
      // Allow users to update only their own document, or if the user is an admin
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }
    
    // Rules for all subcollections of a user
    match /users/{userId}/{collectionId}/{docId} {
        allow read, write, delete: if request.auth.uid == userId || isAdmin();
    }

    // Rules for 'game_rooms' collection
    match /game_rooms/{roomId} {
      allow read: if true; // Any user can see public rooms
      allow create: if request.auth != null; // Any authenticated user can create a room
      allow update: if request.auth != null && (request.auth.uid in resource.data.players || isAdmin());
      allow delete: if request.auth != null && (request.auth.uid == resource.data.createdBy.uid || isAdmin());
    }
    
    // Rules for chat messages within a game room
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }
    
    // Rules for private 'chats' between users
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.userIds;
    }
    
     match /chats/{chatId}/messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }

    // Rules for 'transactions' collection
    match /transactions/{transactionId} {
      allow create: if request.auth != null; // User can create their own transactions
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
      allow update: if isAdmin(); // Only admins can approve/reject
      allow delete: if isAdmin();
    }

    // Rules for 'marketing_applications' collection
    match /marketing_applications/{appId} {
        allow create: if true; // Anyone can apply
        allow read, update, delete: if isAdmin(); // Only admins can manage applications
    }

    // Rules for settings documents
    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Rules for bonus campaign collections
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /signup_bonus_campaigns/{campaignId}/claims/{claimId} {
      allow read: if request.auth != null;
      // Allow user to claim for themselves, or admin to do anything
      allow write: if request.auth.uid == claimId || isAdmin();
    }
    
    match /daily_bonus_campaigns/{campaignId} {
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }
     match /daily_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == claimId || isAdmin();
    }

    match /deposit_bonus_campaigns/{campaignId} {
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }
     match /deposit_bonus_campaigns/{campaignId}/claims/{claimId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == claimId || isAdmin();
    }

    // Rules for referral campaigns
    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Rules for bonus claims (referee and referrer claims)
    match /bonus_claims/{claimId} {
        allow create: if request.auth != null; // Users can create their own claims
        allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
        allow update, delete: if isAdmin();
    }
    
    // Rules for general notifications
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create: if true; // Functions or clients can create notifications for users
    }
    
     match /friend_requests/{requestId} {
      allow read, create, delete: if request.auth != null;
    }
  }
}
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      // Any signed-in user can read another user's profile.
      allow read: if isSignedIn();

      // A user can only create their own user document.
      allow create: if isOwner(userId);

      // A user can update their own profile, but not critical fields like balance or role.
      // Admins can update any field.
      // The system (via Cloud Functions) is allowed to update balances during game transactions.
      allow update: if 
        (isOwner(userId) && 
            !('balance' in request.resource.data && request.resource.data.balance != resource.data.balance) &&
            !('marketingBalance' in request.resource.data && request.resource.data.marketingBalance != resource.data.marketingBalance) &&
            !('role' in request.resource.data && request.resource.data.role != resource.data.role)
        ) || isAdmin();
    }
    
    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
      allow delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
    match /game_rooms/{roomId} {
      // Any signed-in user can list public games.
      allow list, read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.createdBy.uid);
      allow delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);
      // Allow joining, playing moves, and completing the game.
      allow update: if isSignedIn(); 
    }
    
    match /transactions/{transactionId} {
      allow list, read: if (isSignedIn() && isOwner(resource.data.userId)) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, list, update: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
      allow create; 
      allow read, update, delete: if isAdmin();
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    match /chats/{chatId} {
      allow read, write, list: if isSignedIn() && request.auth.uid in resource.data.userIds;
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
    
    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // --- Bonus System Rules ---
    
    // Campaigns are readable by any signed-in user, but only writable by admins.
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        match /claims/{userId} {
            allow read, write: if isOwner(userId) || isAdmin();
        }
    }

    match /daily_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        match /claims/{userId} {
            allow read, write: if isOwner(userId) || isAdmin();
        }
    }

    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        match /claims/{userId} {
            allow read, write: if isOwner(userId) || isAdmin();
        }
    }

    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    // Users can write to their own subcollections for claims, but only admins can read them all.
    match /users/{userId}/daily_bonus_claims/{campaignId} {
        allow read, write: if isOwner(userId);
    }
     match /users/{userId}/bonus_claims/{claimId} {
        allow read, write: if isOwner(userId);
    }
    
     match /users/{userId}/active_campaigns/{docId} {
        allow read, write: if isOwner(userId);
    }
    
    // Collection group for admins to manage all claims.
    match /{path=**}/bonus_claims/{claimId} {
      allow read, write: if isAdmin();
    }
  }
}
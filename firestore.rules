
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Rules for 'event_enrollments' subcollection
    match /users/{userId}/event_enrollments/{enrollmentId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Rules for the 'game_rooms' collection
    match /game_rooms/{gameId} {
        allow read: if request.auth.uid != null;
        allow create: if request.auth.uid != null;
        allow update, delete: if resource.data.createdBy.uid == request.auth.uid || isAdmin();
    }
    
    // Rules for game chat messages
    match /game_rooms/{gameId}/messages/{messageId} {
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(gameId)).data.players;
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid != null;
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Rules for friend requests
    match /friend_requests/{requestId} {
        allow read, write, delete: if request.auth.uid == resource.data.toId || request.auth.uid == resource.data.fromId || isAdmin();
    }

    // Rules for notifications
    match /notifications/{notificationId} {
        allow read, write, update: if request.auth.uid == resource.data.userId;
    }

    // Rules for marketing applications
    match /marketing_applications/{applicationId} {
      allow create: if request.auth.uid == null || request.auth.uid != null; // Anyone can apply
      allow read, update: if isAdmin();
    }
    
    // Rules for events
    match /events/{eventId} {
        allow read: if request.auth.uid != null;
        allow create, update, delete: if isAdmin();
    }

    // Rules for settings
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
  }
}


rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow anyone to count the users collection for the bonus card
    match /users/{userId} {
        allow count: if true;
        allow read; // allow reading of public user profiles
        allow write: if request.auth.uid == userId; // only user can write to their doc
    }
    
    match /game_rooms/{roomId} {
      // Anyone can read the list of public rooms
      allow list: if !resource.data.isPrivate;
      // Anyone can read a specific public room if it's waiting
      allow get: if resource.data.isPrivate == false && resource.data.status == 'waiting';
      
      // Logged-in users can create rooms if they are in the players list
      allow create: if request.auth != null && request.auth.uid in request.resource.data.players;

      // Only players in the game can read or write to it once it's in-progress
      allow read, write: if request.auth != null && request.auth.uid in resource.data.players;

        // Chat messages within a game
        match /messages/{messageId} {
            // Only players in the game can read/write chat messages
            allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }
    
    match /transactions/{transactionId} {
        // Only the user associated with a transaction can read or create it
        allow read, create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    match /chats/{chatId} {
        // Only users who are part of the chat can read or write to it.
        allow read, write: if request.auth != null && request.auth.uid in resource.data.users;

        match /messages/{messageId} {
             allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }

    match /notifications/{notificationId} {
        allow read, write, create, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /friend_requests/{requestId} {
        allow read, create: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
        allow update, delete: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }

    match /marketing_applications/{appId} {
        // Anyone can create an application
        allow create: if true;
        // Only admins should be able to read/update them (handled by backend logic)
        allow read, update: if false; 
    }
  }
}

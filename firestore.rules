rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Game Rooms
    match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.createdBy.uid;
      allow update: if request.auth.uid in resource.data.players;
      allow delete: if request.auth.uid == resource.data.createdBy.uid;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // Users Collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || exists(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friends) && userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friends;
      allow write: if request.auth.uid == userId;

       // Allow reading marketer data during game join transaction
      function canReadForGameJoin() {
        return exists(/databases/$(database)/documents/game_rooms/$(request.resource.data.gameRoomId)) &&
               request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(request.resource.data.gameRoomId)).data.players;
      }
      allow get: if request.auth.uid == userId || (get(/databases/$(database)/documents/users/$(userId)).data.role == 'marketer' && canReadForGameJoin());


      match /active_campaigns/{docId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Marketing applications
    match /marketing_applications/{appId} {
        allow create: if request.auth != null;
        allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Transactions, deposits, withdrawals
    match /transactions/{transactionId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || request.auth.uid == resource.data.userId;
    }
    
     // Settings
    match /settings/{settingId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Friend Requests
    match /friend_requests/{requestId} {
        allow read, create, delete: if request.auth.uid == request.resource.data.fromId || request.auth.uid == request.resource.data.toId;
    }
    
    // Notifications
    match /notifications/{notifId} {
        allow read, create, update: if request.auth.uid == resource.data.userId;
    }

    // Bonus Campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        match /claims/{claimId} {
          allow read, write: if request.auth != null;
        }
    }
     match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /tasks/{taskId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Bonus Claims
    match /bonus_claims/{claimId} {
       allow read, create: if request.auth.uid == request.resource.data.userId;
       allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read;
      allow write: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      allow list: if isAdmin();

      // Allow users to claim daily bonuses for themselves
      match /daily_bonus_claims/{claimId} {
        allow create, read: if request.auth.uid == userId;
      }
    }

    match /game_rooms/{roomId} {
      allow read;
      allow create, update, delete: if request.auth.uid != null;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid != null;
      allow list: if isAdmin();
    }
    
    match /settings/{settingId} {
      allow read;
      allow write: if isAdmin();
    }

    match /marketing_applications/{appId} {
      allow create;
      allow read, write: if isAdmin();
      allow list: if isAdmin();
    }

    match /referral_tasks/{taskId} {
      allow read;
      allow create, update, delete: if isAdmin();
    }

    match /bonus_claims/{claimId} {
      allow create: if request.auth != null;
      allow read, write: if isAdmin();
    }

    match /bonuses/{bonusId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }

    match /dailyBonusClaims/{bonusId} {
        allow read;
        // Allow a user to update the counter if they are the one claiming
        allow write: if request.auth.uid != null;
    }

    // Admins can read/write any collection
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}

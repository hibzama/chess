rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /game_rooms/{roomId} {
      // Allow any authenticated user to read any room. This is necessary
      // for a second player to view the room details before joining.
      // Sensitive actions are protected by the update rule and Cloud Functions.
      allow read: if request.auth != null;

      allow create: if request.auth != null;
      
      // Only a player who is part of the game can update it.
      // This allows the game logic (like making a move) to work for both players.
      allow update: if request.auth != null && request.auth.uid in resource.data.players;
      
      allow delete: if request.auth != null && resource.data.createdBy.uid == request.auth.uid;
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }
    
    match /transactions/{transactionId} {
        allow read, create: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /marketing_applications/{appId} {
      allow create: if request.auth == null || request.auth != null;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /bonuses/{bonusId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /dailyBonusClaims/{bonusId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /users/{userId}/daily_bonus_claims/{claimId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /referral_tasks/{taskId} {
         allow read: if true;
         allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /bonus_claims/{claimId} {
        allow create: if request.auth != null;
        allow read, write: if request.auth != null && (request.auth.uid == resource.data.newUserId || request.auth.uid == resource.data.referrerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /friend_requests/{requestId} {
      allow read, create, delete: if request.auth != null;
    }

    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }

  }
}

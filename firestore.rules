rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
        return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read: if isSignedIn();
      
      allow update: if isOwner(userId) && !(
        'balance' in request.resource.data && request.resource.data.balance != resource.data.balance
      ) && !(
        'marketingBalance' in request.resource.data && request.resource.data.marketingBalance != resource.data.marketingBalance
      ) && !(
        'role' in request.resource.data && request.resource.data.role != resource.data.role
      );
      
      allow create: if isOwner(userId);
    }
    
    match /friend_requests/{requestId} {
      allow read, delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
    }
    
    match /game_rooms/{roomId} {
      allow read, list: if isSignedIn() || isAdmin();
      allow create: if isSignedIn() && isOwner(request.resource.data.createdBy.uid);
      allow delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);
      allow update: if isSignedIn();
    }

    match /transactions/{transactionId} {
      allow read, list: if (isSignedIn() && isOwner(resource.data.userId)) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, list: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn();
        allow update: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    match /marketing_applications/{appId} {
        allow create; 
        allow read, update, delete: if isAdmin();
    }
    
     // Allow chat messages within a game room
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    // Allow chat messages in direct chats
    match /chats/{chatId} {
      allow read, list, update, create: if isSignedIn() && request.auth.uid in resource.data.users;
    }
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if isSignedIn() && get(/databases/$(database)/documents/chats/$(chatId)).data.users[request.auth.uid].exists == true;
    }
  }
}

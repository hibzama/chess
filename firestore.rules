rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn() && request.query.get('campaignInfo.referrerId') == request.auth.uid;
      allow create: if isSignedIn();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      // Allow users to manage their own active campaign subcollection
      match /active_campaigns/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    match /game_rooms/{roomId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn() && resource.data.players.hasAny([request.auth.uid]) || isAdmin();
        allow delete: if isSignedIn() && (request.auth.uid == resource.data.createdBy.uid || isAdmin());
        
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && resource.data.players.hasAny([request.auth.uid]);
        }
    }
    
    // Admins can manage campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        
        // Users cannot directly interact, claims are created via transactions
        match /claims/{claimId} {
            allow read, write: if isAdmin();
        }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            // A user can create a claim for themselves
            allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
            // Only admins can view or modify claims
            allow read, update, delete: if isAdmin();
        }
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /transactions/{transactionId} {
        allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if isAdmin();
    }
    
    match /friend_requests/{requestId} {
        allow read: if isSignedIn() && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid || isAdmin());
        allow create: if isSignedIn() && request.resource.data.fromId == request.auth.uid;
        allow delete: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid || isAdmin());
    }
    
    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && resource.data.userId == request.auth.uid;
        allow create: if isSignedIn();
    }
    
     match /marketing_applications/{appId} {
      allow create: if request.auth == null; // Allow unauthenticated users to apply
      allow read, update, delete: if isAdmin(); 
    }
    
    match /bonus_claims/{claimId} {
        // A user can create a claim for themselves
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        // Only admins can manage claims
        allow read, update, delete: if isAdmin();
    }

    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }
  }
}

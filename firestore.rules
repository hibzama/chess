rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default-deny all access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      // Admins can read/write any user document
      // Users can read any user document (for profiles)
      allow read: if request.auth != null;
      // A user can only be created by themselves (signup)
      allow create: if request.auth.uid == userId;
      // A user can only update their own document
      allow update: if request.auth.uid == userId || isAdmin();
      
       match /active_campaigns/{docId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /daily_bonus_claims/{docId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /bonus_claims/{docId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Admins can manage all collections
    match /settings/{docId} {
       allow read, write: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
        allow create: if request.auth != null;
        allow read, write: if isAdmin();
    }
    
    match /transactions/{transactionId} {
      // User can create their own transactions
      allow create: if request.auth.uid == request.resource.data.userId;
      // User can read their own transactions, admin can read all
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Only admin can update transactions
      allow update: if isAdmin();
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
        match /claims/{claimId} {
             allow read, write: if isAdmin() || request.auth.uid == claimId;
        }
    }
    
     match /daily_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
         match /claims/{claimId} {
             allow read, write: if isAdmin() || request.auth.uid == claimId;
        }
    }
    
    match /referral_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }

    
     match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow update, delete: if request.auth.uid in resource.data.players || isAdmin();
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players || isAdmin();
      }
    }
    
    match /friend_requests/{requestId} {
        allow read, write: if request.auth.uid == resource.data.toId || request.auth.uid == resource.data.fromId || isAdmin();
    }
    
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.userIds || isAdmin();
      match /messages/{messageId} {
         allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds || isAdmin();
      }
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth != null;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow admins full access
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId}/{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.createdBy.uid || (request.auth.uid == resource.data.player2.uid);
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }
    
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.userIds;
    }
    
    match /chats/{chatId}/messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
    }

    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth != null;
        allow update: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
        allow create: if true;
        allow read, update: if isAdmin();
    }
    
    match /notifications/{notifId} {
        allow read, update: if request.auth.uid == resource.data.userId;
    }
    
    // --- BONUS CAMPAIGN RULES ---
    
    // Users need to be able to see available campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
     match /daily_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

     match /deposit_bonus_campaigns/{campaignId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Users need to be able to claim a bonus for themselves
    match /signup_bonus_campaigns/{campaignId}/claims/{userId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isAdmin();
    }

    match /daily_bonus_campaigns/{campaignId}/claims/{userId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isAdmin();
    }
    
    match /deposit_bonus_campaigns/{campaignId}/claims/{userId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isAdmin();
    }
    
    // --- REFERRAL CAMPAIGN RULES ---
    
    match /referral_campaigns/{campaignId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Allow users to query their own pending/completed claims
    match /bonus_claims/{claimId} {
        allow read, list: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
  }
}

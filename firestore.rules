
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create;
      // Admins can list all users
      allow list: if isAdmin();
    }
    
    match /game_rooms/{roomId} {
      allow read, create;
      allow update, delete: if request.auth.uid == resource.data.createdBy.uid || isAdmin();
      // Allow players in the game to write to the messages subcollection
       match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.players;
      }
    }
    
    match /transactions/{transactionId} {
      allow read, update, delete: if isAdmin();
      allow create: if request.auth.uid != null;
      // Allow a user to read their own transactions
      allow list: if request.auth.uid != null && request.auth.uid == request.query.where[0][2];
    }
    
    match /marketing_applications/{appId} {
        allow create;
        allow read, update, delete: if isAdmin();
    }
    
    match /settings/{docId} {
        allow read: if request.auth.uid != null;
        allow write: if isAdmin();
    }
    
    match /bonuses/{bonusId} {
        allow read: if request.auth.uid != null;
        allow write: if isAdmin();
    }
    
     match /dailyBonusClaims/{bonusId} {
        // Logged-in users can read claim counts
        allow get: if request.auth.uid != null; 
        // Admins can write to the counters (for creation)
        allow write: if isAdmin();
        // Users can increment the count within a transaction
        allow update: if request.auth.uid != null;
    }
    
    match /users/{userId}/daily_bonus_claims/{claimId} {
        // Users can create/write to their own claim subcollection
        allow write: if request.auth.uid == userId;
        // Users can read their own claims, admins can read any
        allow read: if request.auth.uid == userId || isAdmin();
    }
    
     match /referral_tasks/{taskId} {
        allow read: if request.auth.uid != null;
        allow write: if isAdmin();
    }
    
     match /bonus_claims/{claimId} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAdmin();
    }
    
    match /friend_requests/{requestId} {
        allow read, create, delete: if request.auth.uid != null;
    }
    
     match /notifications/{notificationId} {
      allow update: if request.auth.uid == resource.data.userId;
      allow list: if request.auth.uid != null && request.auth.uid == request.query.where[0][2];
      allow create: if request.auth.uid != null;
    }
    
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in resource.data.userIds;
        
        match /messages/{messageId} {
             allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
  }
}

    
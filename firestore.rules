rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users Collection
    match /users/{userId} {
      allow read, update, delete: if isAdmin();
      allow create: if isAuth(); // Allow any authenticated user to create their own document
      allow update: if isUser(userId); // Allow user to update their own document
      
      // Allow a user to increment the l1Count of another user (for referrals)
      allow update: if isAuth()
                    && request.resource.data.l1Count == resource.data.l1Count + 1
                    && request.resource.data.keys().hasOnly(['l1Count']);
                    
      allow list: if isAuth(); // Allows fetching users for friends list, etc.
      
      // Allow reading and writing to the user's own active_campaigns subcollection
      match /active_campaigns/{docId} {
        allow read, write: if isUser(userId);
      }
      
      // Allow reading and writing to the user's own bonus_claims subcollection
       match /bonus_claims/{claimId} {
        allow read, write: if isUser(userId);
      }
    }

    // Game Rooms Collection
    match /game_rooms/{roomId} {
      allow read: if isAuth(); // Allow any authenticated user to see game rooms for lobbies
      allow create: if isAuth(); // Allow any authenticated user to create a game room
      allow update: if isAuth() && resource.data.players.hasAny([request.auth.uid]); // Only players in the game can update it
      allow delete: if isAuth() && request.auth.uid == resource.data.createdBy.uid; // Only creator can delete
      
      match /messages/{messageId} {
        allow read, create: if isAuth() && resource.data.players.hasAny([request.auth.uid]);
      }
    }

    // Transactions Collection
    match /transactions/{transactionId} {
      allow read, create: if isAuth();
      allow list, update, delete: if isAdmin();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      allow read, list, create, update: if isAuth();
      allow delete: if isAdmin();
    }
    
    // Bonus Campaigns
    match /signup_bonus_campaigns/{campaignId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }
    match /daily_bonus_campaigns/{campaignId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
        
        match /claims/{claimId} {
            allow read, write: if isAuth();
        }
    }
     match /deposit_bonus_campaigns/{campaignId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
        
        match /claims/{claimId} {
            allow read, write: if isAuth();
        }
    }
     match /referral_campaigns/{campaignId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }
    
    // Bonus Claims Collection
    match /bonus_claims/{claimId} {
        allow create: if isAuth();
        allow read, list: if isAuth() && (request.query.where.size() > 0 && request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid);
        allow update, delete: if isAdmin();
    }

    // Marketing Applications
    match /marketing_applications/{appId} {
        allow create: if true; // Anyone can apply
        allow read, list, update, delete: if isAdmin();
    }
    
    // Settings collection
    match /settings/{settingId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
  }
}

    
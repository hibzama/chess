rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read; // Allow any user to read any other user's profile for profile viewing.
      allow create; // Allow any user to create their own account.
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin()); // Allow user to update their own data, or an admin to update any user.
    }

    match /game_rooms/{roomId} {
      allow read; // Anyone can see public game rooms.
      allow create: if request.auth != null; // Authenticated users can create rooms.
      // Only players in the game can update it, or admins.
      allow update, delete: if request.auth != null && (resource.data.createdBy.uid == request.auth.uid || request.auth.uid in resource.data.players || isAdmin());
    }

    // Messages are subcollections of game_rooms
    match /game_rooms/{roomId}/messages/{messageId} {
        allow read: if request.auth != null && (get(/databases/$(database)/documents/game_rooms/$(roomId)).data.createdBy.uid == request.auth.uid || request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players);
        allow create: if request.auth != null && (get(/databases/$(database)/documents/game_rooms/$(roomId)).data.createdBy.uid == request.auth.uid || request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players);
    }
    
    match /transactions/{transactionId} {
      // Allow user to read their own transactions, or admin to read any.
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      // Admins can update status, users can only create.
      allow create: if request.auth != null;
      allow update: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
      allow create; // Anyone can apply
      allow read, update: if isAdmin(); // Only admins can view and process
    }
    
    // Allow admins to manage settings, and authenticated users to read non-sensitive settings
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
        allow create: if request.auth != null; // Can be created by functions or other users
    }
    
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.userIds;
      allow create: if request.auth.uid in request.resource.data.userIds;
      
       match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }
    
    match /bonuses/{bonusId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /dailyBonusClaims/{bonusId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admin can initialize the counter, but transaction will handle increments
    }

    match /users/{userId}/daily_bonus_claims/{claimId} {
      allow read, create: if request.auth != null && request.auth.uid == userId;
    }
    
    match /referral_tasks/{taskId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
      allow create: if request.auth != null;
      allow read, update: if isAdmin();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getDoc(path) {
      return get(/databases/$(database)/documents/$(path));
    }

    function incomingDoc() {
      return request.resource.data;
    }
    
    // Checks if the user is an admin by looking at their user document.
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Checks if the user is a participant in a chat.
    function isChatParticipant(chatId) {
        return request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId) && !exists(/databases/$(database)/documents/users/$(userId));

      allow update: if 
        // Allow user to update their own non-critical fields
        (isOwner(userId) && !(
            'balance' in incomingDoc() && incomingDoc().balance != resource.data.balance
          ) && !(
            'marketingBalance' in incomingDoc() && incomingDoc().marketingBalance != resource.data.marketingBalance
          ) && !(
            'role' in incomingDoc() && incomingDoc().role != resource.data.role
          )
        ) ||
        // Allow system processes (like game transactions) to update balance
        (isSignedIn() && ('balance' in incomingDoc() || 'wins' in incomingDoc() || 'l1Count' in incomingDoc() || 'bonusReferralCount' in incomingDoc())) ||
        // Allow admins to update any user document
        isAdmin();
        
      match /daily_bonus_claims/{campaignId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
      allow delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
    match /game_rooms/{roomId} {
      allow read: if isSignedIn();
      allow list: if isSignedIn() && (!('isPrivate' in request.query) || request.query.isPrivate == false);
      allow create: if isSignedIn() && isOwner(request.resource.data.createdBy.uid);
      allow delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);
      allow update: if isSignedIn() && (
        (isOwner(resource.data.player2.uid) || isOwner(resource.data.createdBy.uid)) ||
        (
            !isOwner(resource.data.createdBy.uid) &&
            resource.data.status == 'waiting' &&
            request.resource.data.status == 'in-progress' &&
            request.resource.data.player2.uid == request.auth.uid &&
            !(request.auth.uid in resource.data.players) &&
            (request.auth.uid in request.resource.data.players)
        )
      );
    }
    
    match /transactions/{transactionId} {
      allow read, list: if (isSignedIn() && isOwner(resource.data.userId)) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, list, update: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
        allow create; 
        allow read, update, delete: if isAdmin();
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    match /chats/{chatId} {
        allow read, write, list: if isSignedIn() && request.auth.uid in chatId.split('_');

        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in chatId.split('_');
        }
    }
    
    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Bonus System Rules
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{userId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      match /claims/{userId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
       match /claims/{userId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    match /referral_campaigns/{campaignId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /bonus_claims/{claimId} {
        allow read, list: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
        allow create: if isSignedIn();
        allow update, delete: if isAdmin();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USER PROFILES
    match /users/{userId} {
      // Anyone can see a user's public profile data
      allow read: if isSignedIn();
      // Only the user themselves or an admin can update their profile
      allow write: if isOwner(userId) || isAdmin();
    }

    // GAME ROOMS
    match /game_rooms/{roomId} {
      // Anyone can see public game rooms
      allow list: if isSignedIn();
      // Only players in the room can read the full room data.
      allow read: if isSignedIn() && (resource.data.isPrivate == false || request.auth.uid in resource.data.players);
      // Anyone can create a game room
      allow create: if isSignedIn();
      // Only the creator can delete a waiting room. Players can update to join or during gameplay. Admins can update.
      allow update: if isSignedIn() && (
                      (request.auth.uid in resource.data.players) ||
                      (resource.data.status == 'waiting' && request.auth.uid != resource.data.createdBy.uid) ||
                      isAdmin()
                    );
      allow delete: if isSignedIn() && (request.auth.uid == resource.data.createdBy.uid || isAdmin());

      // CHAT MESSAGES within a game
      match /messages/{messageId} {
        // Only players in the room can read/write chat messages
        allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    // CHATS (Direct Messages)
    match /chats/{chatId} {
      // A user can only access a chat if their UID is in the `users` map of the chat document.
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.users;
      
      match /messages/{messageId} {
         allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      }
    }

    // TRANSACTIONS
    match /transactions/{transactionId} {
      // Users can only create their own transactions. Admins can create any.
      allow create: if isSignedIn() && (request.resource.data.userId == request.auth.uid || isAdmin());
      // Admins can read all transactions. Users can read their own.
      allow read: if isAdmin() || (isSignedIn() && isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId));
      // Only Admins can update transaction status (e.g., approve/reject).
      allow update: if isAdmin();
      allow delete: if isAdmin();
      // Allow users to query their own transaction list
      allow list: if isSignedIn();
    }
    
    // FRIEND REQUESTS
    match /friend_requests/{requestId} {
      allow read, create, update, delete: if isSignedIn();
    }

    // MARKETING APPLICATIONS & WITHDRAWALS
    match /marketing_applications/{appId} {
      allow create: if isSignedIn();
      allow read, update, delete: if isAdmin();
    }
    
    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, create, update, delete: if isSignedIn() && isOwner(resource.data.userId);
      allow list: if isSignedIn();
    }

  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Allow user creation for anyone for sign-up
      allow create: if request.auth != null;
      // Allow users to read and update their own data
      allow read, update: if request.auth.uid == userId;
    }
    
    match /transactions/{transactionId} {
      // Allow user to read their own transactions
      allow read: if request.auth.uid == resource.data.userId;
      // Allow user to create new transactions for themselves
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
      // Allow any authenticated user to read campaign details
      allow read: if request.auth != null;
    }
    
    match /daily_bonus_campaigns/{campaignId} {
      // Allow any authenticated user to read campaign details
      allow read: if request.auth != null;
      // Allow authenticated users to read the claims subcollection (for counts)
      match /claims/{claimId} {
        allow read: if request.auth != null;
      }
    }

    match /referral_campaigns/{campaignId} {
       allow read: if request.auth != null;
    }

    match /bonus_claims/{claimId} {
       // Allow users to create their own claims
       allow create: if request.auth.uid == request.resource.data.userId;
       // Allow users to read their own claims
       allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Rule for the users' subcollections
    match /users/{userId}/{subcollection}/{docId} {
        // Allow users to read/write to their own subcollections
        allow read, write: if request.auth.uid == userId;
    }

    match /marketing_applications/{appId} {
      // Allow anyone to apply (create)
      allow create: if request.auth == null;
    }

    match /game_rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.createdBy.uid;
      allow update: if request.auth.uid in resource.data.players;
      allow delete: if request.auth.uid == resource.data.createdBy.uid;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    match /friend_requests/{requestId} {
        allow read, create, delete: if request.auth != null;
    }

    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
    }
    
    match /settings/{settingId} {
      allow read: if request.auth != null;
    }

    match /chats/{chatId} {
      allow read, update, create: if request.auth.uid in resource.data.userIds;
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }

  }
}

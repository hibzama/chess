rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function incomingDoc() {
      return request.resource.data;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();

      // Bonus claims are subcollections of the user document
      match /bonus_claims/{claimId} {
        allow read, create: if isOwner(userId);
      }
       match /daily_bonus_claims/{claimId} {
        allow read, create: if isOwner(userId);
      }
       match /active_campaigns/{campaignId} {
        allow read, write, delete: if isOwner(userId);
       }
    }
    
    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
      allow delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
    match /game_rooms/{roomId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.createdBy.uid);
      allow delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);
      allow update: if isSignedIn() && (
          // Joining a game
          (resource.data.status == 'waiting' && request.resource.data.status == 'in-progress') ||
          // Playing a move or other in-game update
          (request.auth.uid in resource.data.players && resource.data.status == 'in-progress')
      );

        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
        }
    }
    
    match /transactions/{transactionId} {
      allow read, list: if (isSignedIn() && isOwner(resource.data.userId)) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, list, update: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
        allow create; 
        allow read, update, delete: if isAdmin();
    }

    match /chats/{chatId} {
        allow read, write: if isSignedIn() && request.auth.uid in chatId.split('_');

        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in chatId.split('_');
        }
    }
    
    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Bonus System Rules
    match /daily_bonus_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();

        // Claims are a subcollection of a campaign, only write access is needed for users.
        match /claims/{userId} {
            allow create: if isSignedIn() && isOwner(userId);
            allow read: if isAdmin(); // Only admins can see the full list of claimants
        }
    }

    match /referral_campaigns/{campaignId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow create: if isSignedIn();
        allow read, update: if isAdmin();
        allow list: if isAdmin();
    }
  }
}
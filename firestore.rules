rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User Collection Rules
    match /users/{userId} {
      allow read: if isAuth();
      allow create: if !isAuth(); // Anyone can create their own user doc during signup
      allow update: if isOwner(userId) || isAdmin();

      // Subcollections
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    // Game Room Rules
    match /game_rooms/{roomId} {
      allow read: if isAuth();
      allow create: if isAuth();
      allow update: if isAuth() && (resource.data.createdBy.uid == request.auth.uid || roomHasPlayer(request.auth.uid));
      allow delete: if isAuth() && resource.data.createdBy.uid == request.auth.uid;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, create: if roomHasPlayer(request.auth.uid);
      }
    }

    function roomHasPlayer(userId) {
      return userId in resource.data.players;
    }
    
    // Transaction Collection Rules
    match /transactions/{transactionId} {
        allow read: if isAuth() && (isOwner(resource.data.userId) || isAdmin());
        allow create: if isAuth();
        allow update: if isAdmin();
    }
    
    // Marketing Application Rules
    match /marketing_applications/{appId} {
        allow create: if true;
        allow read, write: if isAdmin();
    }
    
    // Settings Collection Rules
    match /settings/{settingId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // Notification Collection Rules
    match /notifications/{notificationId} {
        allow read, update: if isAuth() && isOwner(resource.data.userId);
        allow create: if isAuth();
    }
    
    // Chat Collection Rules
    match /chats/{chatId} {
        allow read, update: if isAuth() && request.auth.uid in resource.data.userIds;
        allow create: if isAuth();
        match /messages/{messageId} {
             allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    // Friend Request Collection Rules
    match /friend_requests/{requestId} {
        allow read, create, delete: if isAuth() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
    // Bonus & Campaign Rules
    match /signup_bonus_campaigns/{campaignId} {
      allow read, write: if isAdmin();
       match /claims/{claimId} {
         allow read, write: if isAdmin() || isOwner(claimId);
       }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
       match /claims/{claimId} {
         allow read, write: if isAdmin();
       }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
      match /claims/{claimId} {
         allow read, write: if isAdmin() || isOwner(claimId);
      }
    }
    
    match /referral_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    match /{path=**}/bonus_claims/{claimId} {
       allow read, create: if isAuth();
       allow write: if isAdmin();
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isMarketer() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'marketer';
    }

    // Admins have full access
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // All users can create an account
    match /users/{userId} {
        allow create;
        allow read: if isUserAuthenticated();
        allow write: if isUser(userId);

        // Users can manage their own subcollections
        match /active_campaigns/{docId} {
            allow read, write: if isUser(userId);
        }
    }
    
    // Public read for settings
    match /settings/{docId} {
        allow read: if true;
    }

    // Game rooms logic
    match /game_rooms/{roomId} {
      allow read: if true;
      allow create: if isUserAuthenticated() && request.resource.data.createdBy.uid == request.auth.uid;
      allow update: if isUserAuthenticated() && (
                      (resource.data.status == 'waiting' && request.auth.uid in resource.data.players) ||
                      (resource.data.status == 'in-progress' && request.auth.uid in resource.data.players)
                    );
      allow delete: if isUserAuthenticated() && resource.data.createdBy.uid == request.auth.uid && resource.data.status == 'waiting';

      match /messages/{messageId} {
        allow read, create: if isUserAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }
    
    // Chat logic
    match /chats/{chatId} {
        allow read, update: if isUserAuthenticated() && request.auth.uid in resource.data.userIds;
        allow create: if isUserAuthenticated();
        
        match /messages/{messageId} {
            allow read, create: if isUserAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }
    
    // Notifications
    match /notifications/{notifId} {
        allow read, write: if isUserAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Transactions can be created by users, but only read by the user who owns them or an admin
    match /transactions/{transactionId} {
        allow create: if isUserAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow read, update: if isUserAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Marketing applications can be created by anyone
    match /marketing_applications/{appId} {
        allow create: if true;
    }
    
    // Campaigns can be read by any authenticated user
    match /referral_campaigns/{campaignId} {
      allow read: if isUserAuthenticated();
    }
    
    match /tasks/{taskId} {
      allow read: if isUserAuthenticated();
    }
    
    match /signup_bonus_campaigns/{campaignId} {
        allow read: if isUserAuthenticated();
    }

    match /deposit_bonus_campaigns/{campaignId} {
        allow read: if isUserAuthenticated();
    }
    
     // Bonus claims can be read by the user who owns them.
    match /bonus_claims/{claimId} {
      allow read, create: if isUserAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // USERS
    match /users/{userId} {
      // Any authenticated user can read public profiles
      allow get: if isAuthenticated();
      // Users can only create and update their own document
      allow create, update, delete: if request.auth.uid == userId;
      
      // Allow specific subcollections for bonuses
      match /daily_bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /bonus_claims/{claimId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /active_campaigns/{campaignId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // GAME ROOMS
    match /game_rooms/{roomId} {
      // Anyone can read a game room to see its details before joining
      allow read: if isAuthenticated();
      // Allow creation by any authenticated user
      allow create: if isAuthenticated();
      
      // Allow updates only under specific conditions (joining, playing, ending)
      allow update: if isAuthenticated() && 
                      (
                        // Condition: Joining a game
                        request.resource.data.status == 'in-progress' && resource.data.status == 'waiting' && request.auth.uid == request.resource.data.player2.uid
                        ||
                        // Condition: Playing a move (must be one of the players)
                        request.auth.uid in resource.data.players && resource.data.status == 'in-progress'
                        ||
                        // Condition: Admin override
                        isAdmin()
                      );
                      
      // Allow deletion only by the creator if the game is still waiting
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.createdBy.uid && resource.data.status == 'waiting';
      
      // Messages subcollection in a game room
      match /messages/{messageId} {
        allow read, create: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // CHATS (Direct Messages)
    match /chats/{chatId} {
        allow read, update, create: if isAuthenticated() && request.auth.uid in resource.data.userIds;
        match /messages/{messageId} {
            allow read, create: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        }
    }

    // TRANSACTIONS
    match /transactions/{transactionId} {
      // Users can only create their own transactions
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Only admins can read/update/delete transactions
      allow read, update, delete: if isAdmin();
    }
    
    // BONUS CAMPAIGNS (Signup, Daily, Deposit, Referral)
    match /{collectionId}/{campaignId} {
      // Any authenticated user can read campaign details
      allow get, list: if isAuthenticated() && 
                        (collectionId == 'signup_bonus_campaigns' || 
                         collectionId == 'daily_bonus_campaigns' || 
                         collectionId == 'deposit_bonus_campaigns' ||
                         collectionId == 'referral_campaigns');
                         
      // Only admins can create, update, or delete campaigns
      allow write: if isAdmin() && 
                    (collectionId == 'signup_bonus_campaigns' || 
                     collectionId == 'daily_bonus_campaigns' || 
                     collectionId == 'deposit_bonus_campaigns' ||
                     collectionId == 'referral_campaigns');
      
      // Claims subcollection for bonuses
      match /claims/{claimId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow write: if isAdmin(); // Admins can manage claims
      }
    }
    
    // BONUS CLAIMS (centralized collection)
    match /bonus_claims/{claimId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow update: if isAdmin(); // Only admins can approve/reject
    }

    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated(); // Allow any authenticated user/service to create notifications
    }
    
    // MARKETING APPLICATIONS & SETTINGS
    match /marketing_applications/{appId} {
        allow create: if isAuthenticated(); // Anyone can apply
        allow read, update: if isAdmin();
    }

    match /settings/{settingId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
  }
}
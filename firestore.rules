rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function incomingDoc() {
      return request.resource.data;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId) && !exists(/databases/$(database)/documents/users/$(userId));
      allow update: if 
        (isOwner(userId) && !(
            'balance' in incomingDoc() && incomingDoc().balance != resource.data.balance
          ) && !(
            'marketingBalance' in incomingDoc() && incomingDoc().marketingBalance != resource.data.marketingBalance
          ) && !(
            'role' in incomingDoc() && incomingDoc().role != resource.data.role
          )
        ) ||
        (isSignedIn() && 'balance' in incomingDoc()) ||
        isAdmin();
    }
    
    match /friend_requests/{requestId} {
      allow read: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
      allow create: if isSignedIn() && isOwner(request.resource.data.fromId);
      allow delete: if isSignedIn() && (isOwner(resource.data.fromId) || isOwner(resource.data.toId));
    }
    
    match /game_rooms/{roomId} {
      allow create: if isSignedIn() && request.resource.data.createdBy.uid == request.auth.uid;
      allow read: if isSignedIn();
      allow list: if isSignedIn() && resource.data.isPrivate == false;
      allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid;
      allow update: if 
          isSignedIn() && 
          (
              (
                  resource.data.status == 'waiting' && 
                  request.resource.data.status == 'in-progress' &&
                  request.resource.data.player2.uid == request.auth.uid
              ) ||
              (
                  (resource.data.createdBy.uid == request.auth.uid || resource.data.player2.uid == request.auth.uid) &&
                  resource.data.status == 'in-progress' &&
                  (request.resource.data.status == 'in-progress' || request.resource.data.status == 'completed')
              )
          );
    }
    
    match /transactions/{transactionId} {
      allow read, list: if (isSignedIn() && isOwner(resource.data.userId)) || isAdmin();
      allow create: if isSignedIn();
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, list, update: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn();
    }
    
    match /marketing_applications/{appId} {
        allow create; 
        allow read, update, delete: if isAdmin();
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    match /chats/{chatId} {
        allow read, write, list: if isSignedIn() && request.auth.uid in chatId.split('_');
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in chatId.split('_');
        }
    }
    
    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Bonus System Rules
    match /signup_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if isOwner(claimId) || isAdmin();
            allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        }
    }
    
    match /daily_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if isOwner(claimId) || isAdmin();
            allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        }
    }
    
    match /deposit_bonus_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        allow write: if isAdmin();
        
        match /claims/{claimId} {
            allow read: if isOwner(claimId) || isAdmin();
            allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        }
    }
    
     match /referral_campaigns/{campaignId} {
        allow read, list: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        allow read, list: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        allow update: if isAdmin();
    }

    // User-specific subcollections for bonus tracking
    match /users/{userId}/bonus_claims/{claimId} {
        allow read, list, create: if isOwner(userId);
    }
    
    match /users/{userId}/daily_bonus_claims/{claimId} {
        allow read, list, create: if isOwner(userId);
    }
     match /users/{userId}/active_campaigns/{docId} {
        allow read, write, delete: if isOwner(userId);
    }

  }
}
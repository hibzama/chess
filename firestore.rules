
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId 
                    && request.resource.data.diff(request.resource.data).affectedKeys().hasOnly(['photoURL', 'binancePayId'])
                    || (request.resource.data.balance < request.resource.data.balance 
                        && getAfter(/databases/$(database)/documents/users/$(userId)/event_enrollments/$(request.resource.data.enrollingEventId)).data.enrollmentFee == request.resource.data.balance - request.resource.data.balance);
    }
    
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    // TRANSACTIONS collection
    match /transactions/{transactionId} {
      allow read, create: if request.auth != null;
      allow update, delete: if isAdmin();
    }
    
    // GAME_ROOMS collection
    match /game_rooms/{roomId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.createdBy.uid;
        allow update: if request.auth.uid in resource.data.players;
        allow delete: if request.auth.uid == resource.data.createdBy.uid || isAdmin();
    }
    
    match /game_rooms/{roomId}/{document=**} {
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
    }

    // CHATS collection
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.users;
        allow create: if request.auth.uid in request.resource.data.users;
    }
    
    match /chats/{chatId}/{document=**} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
    }
    
    // FRIEND_REQUESTS collection
    match /friend_requests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.fromId;
        allow read, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }
    
    // NOTIFICATIONS collection
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }
    
    // MARKETING APPLICATIONS collection
    match /marketing_applications/{appId} {
        allow create: if request.auth == null; // Anyone can apply
        allow read, update, delete: if isAdmin();
    }

    // SETTINGS collection (admin only)
    match /settings/{settingId} {
        allow read: if request.auth != null; // Allow logged-in users to read bonus settings
        allow write: if isAdmin();
    }
    
    // BONUSES collection (admin write, user read)
    match /bonuses/{bonusId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    match /dailyBonusClaims/{bonusId} {
        allow read, write: if request.auth != null;
    }

    // EVENTS collection (admin write, user read)
    match /events/{eventId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    match /users/{userId}/event_enrollments/{enrollmentId} {
      allow get, list: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

  }
}

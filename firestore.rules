rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USER rules
    // - Authenticated users can read all user profiles (for friends list, etc.)
    // - A user can only create, update, or delete their OWN document.
    // - Admins can read/write any user document.
    match /users/{userId} {
      allow read: if isAuthenticated() || isAdmin();
      allow create, update, delete: if isUser(userId) || isAdmin();
    }

    // GAME ROOM rules
    // - Any authenticated user can read game rooms (for lobbies) and create new ones.
    // - Only players in the game can update it.
    // - Only the creator can delete a waiting room.
    match /game_rooms/{roomId} {
      allow read, create: if isAuthenticated() || isAdmin();
      allow update: if (isUser(resource.data.createdBy.uid) || isUser(resource.data.player2.uid)) || isAdmin();
      allow delete: if isUser(resource.data.createdBy.uid) || isAdmin();

      // Chat messages within a game room
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in resource.data.players || isAdmin();
      }
    }
    
    // TRANSACTION rules
    // - Users can read their own transactions.
    // - Users can create their own transactions.
    // - Users CANNOT update/delete transactions to maintain integrity. Admins can.
    match /transactions/{transactionId} {
        allow read: if isUser(resource.data.userId) || isAdmin();
        allow create: if isUser(request.resource.data.userId) || isAdmin();
        allow update, delete: if isAdmin();
    }
    
    // CHAT rules
    // - Users can only read/write chats they are a part of.
    match /chats/{chatId} {
      allow read, update, delete: if request.auth.uid in resource.data.users || isAdmin();
      allow create: if request.auth.uid in request.resource.data.users || isAdmin();
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users || isAdmin();
      }
    }

    // FRIEND REQUEST rules
    // - Users can read requests sent to them or from them.
    // - Users can create requests (from themselves).
    // - Users can delete requests sent to them (accept/decline).
    match /friend_requests/{requestId} {
      allow read, delete: if isUser(resource.data.toId) || isUser(resource.data.fromId) || isAdmin();
      allow create: if isUser(request.resource.data.fromId) || isAdmin();
    }

    // NOTIFICATION rules
    // - Users can only manage their own notifications.
    match /notifications/{notificationId} {
      allow read, update, create, delete: if isUser(resource.data.userId) || isAdmin();
    }
    
    // ADMIN-ONLY collections
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    match /marketing_applications/{appId} {
      allow read, write: if isAdmin();
      allow create: if isAuthenticated(); // Anyone can apply
    }
  }
}
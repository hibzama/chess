
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isUpdatingAllowedFields(fields) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(fields);
    }

    // USER rules
    match /users/{userId} {
      // Allow any authenticated user to read public profile data.
      allow read: if isAuth();

      // Allow users to create their own document.
      allow create: if isUser(userId);

      // Allow users to update their own document, or admins to update any.
      allow update: if isUser(userId) || isAdmin() || 
                    // Allow any authenticated user to update ONLY the 'balance' or 'wins' fields of another user.
                    // This is required for game transactions (wagers/payouts).
                    (isAuth() && isUpdatingAllowedFields(['balance', 'wins']));
      
      // Subcollections under users.
      match /active_campaigns/{docId} {
        allow read, write: if isUser(userId);
      }
       match /bonus_claims/{docId} {
        allow read, write: if isUser(userId);
      }
       match /daily_bonus_claims/{docId} {
        allow read, write: if isUser(userId);
      }
    }
    
    // GAME_ROOMS rules
    match /game_rooms/{roomId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.createdBy.uid == request.auth.uid;
      // Allow any authenticated user to update a game room (for joining, making moves).
      // More specific rules can be added here if needed (e.g., only players in the game).
      allow update: if isAuth();
      // Only the creator or an admin can delete a waiting room.
      allow delete: if isAuth() && (resource.data.createdBy.uid == request.auth.uid || isAdmin());
      
      match /messages/{messageId} {
        // Allow players in the game to read/write chat messages.
        allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // FRIEND_REQUESTS rules
    match /friend_requests/{requestId} {
        allow read: if isAuth();
        allow create: if isAuth();
        allow delete: if isAuth() && (isUser(resource.data.fromId) || isUser(resource.data.toId));
    }

    // TRANSACTIONS rules
    match /transactions/{transactionId} {
      allow read: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuth();
      allow update, delete: if isAdmin();
    }
    
    // Bonus & Campaign Collections
    match /signup_bonus_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
      match /claims/{claimId} {
        allow read: if isAuth();
        // Allow user to create a claim only for themselves.
        allow create: if isUser(claimId);
      }
    }

    match /daily_bonus_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
       match /claims/{claimId} {
        allow read: if isAuth();
        // Allow user to create a claim only for themselves.
        allow create: if isUser(claimId);
      }
    }

    match /deposit_bonus_campaigns/{campaignId} {
      allow read: if isAuth();
      allow write: if isAdmin();
       match /claims/{claimId} {
        allow read: if isAuth();
        // Allow user to create a claim only for themselves.
        allow create: if isUser(claimId);
      }
    }

    match /referral_campaigns/{campaignId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    match /bonus_claims/{claimId} {
        // Admins can read any claim. Users can read their own claims.
        allow read: if isAdmin() || (isAuth() && resource.data.userId == request.auth.uid);
        // Users can create claims for themselves.
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        // Only admins can update the status of claims.
        allow update: if isAdmin();
    }

    // MARKETING rules
    match /marketing_applications/{appId} {
      allow read: if isAdmin();
      allow create: if isAuth();
      allow update: if isAdmin();
    }
    
    // NOTIFICATIONS rules
    match /notifications/{notificationId} {
      allow read, update: if isAuth() && resource.data.userId == request.auth.uid;
      allow create: if isAuth();
    }
    
    // CHATS rules
    match /chats/{chatId} {
      allow read, update: if isAuth() && request.auth.uid in resource.data.userIds;
      allow create: if isAuth();

      match /messages/{messageId} {
        allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }

    // SETTINGS rules
    match /settings/{settingId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
  }
}

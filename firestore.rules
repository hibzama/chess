rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USER-RELATED RULES
    match /users/{userId} {
      allow read: if true;
      allow create: if !isAuthenticated();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();

      // Users can only manage their own enrollments
      match /event_enrollments/{enrollmentId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // GAME-RELATED RULES
    match /game_rooms/{roomId} {
      allow read: if isAuthenticated() && (resource.data.isPrivate == false || request.auth.uid in resource.data.players);
      allow list: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && (request.auth.uid in resource.data.players || isAdmin());
      
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/game_rooms/$(roomId)).data.players;
      }
    }

    // CHAT-RELATED RULES
    match /chats/{chatId} {
      allow list: if isAuthenticated() && request.auth.uid in resource.data.userIds;
      allow get, update: if isAuthenticated() && request.auth.uid in resource.data.userIds;
      
      match /messages/{messageId} {
          allow read, create: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
      }
    }

    // TRANSACTION & NOTIFICATION RULES
    match /transactions/{transactionId} {
      allow read, create: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow update, delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && isOwner(resource.data.userId);
      allow create, delete: if isAuthenticated(); // Functions can create
    }

    // ADMIN & PUBLIC-READ RULES
    match /marketing_applications/{appId} {
      allow read, update, delete: if isAdmin();
      allow create: if true;
    }
    
    match /dailyBonusClaims/{claimId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /events/{eventId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
     match /bonuses/{bonusId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default rule: Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read/write their own data
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Allow authenticated users to read public user data (like profiles)
    match /users/{userId} {
        allow get: if request.auth != null;
    }
    
    // Allow users to manage their own subcollections (like enrollments, claims)
    match /users/{userId}/{collection}/{docId} {
      allow read, write, create, delete: if request.auth.uid == userId;
    }

    // Allow authenticated users to read public game rooms
    match /game_rooms/{gameId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read/write to chat messages
     match /chats/{chatId}/{message=**} {
      allow read, write: if request.auth != null;
    }

    // Allow admins to manage applications
    match /marketing_applications/{appId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow read access to events for any authenticated user
    match /events/{eventId} {
      allow read: if request.auth != null;
    }

    // Allow public read for bonus counters
    match /dailyBonusClaims/{bonusId} {
        allow read: if true;
    }

    // Allow read for active bonuses
    match /bonuses/{bonusId} {
        allow read: if request.auth != null;
    }

    // Allow admins to read/write settings
    match /settings/{settingId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
     match /transactions/{transactionId} {
        allow read, write: if request.auth != null;
    }
  }
}

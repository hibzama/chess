
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isUser(userId) {
      return request.auth.uid == userId;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Default Deny
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins can do anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Specific Collection Rules
    match /users/{userId} {
      allow read: if isSignedIn();
      allow update: if isUser(userId);
    }

    match /settings/{docId} {
        allow read: if isSignedIn();
    }

    match /game_rooms/{roomId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn() && (request.auth.uid in resource.data.players);
        allow delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid;
    }
    
    match /game_rooms/{roomId}/messages/{messageId} {
      allow read, write: if isSignedIn();
    }
    
    match /chats/{chatId} {
      allow read, write: if isSignedIn() && (request.auth.uid in resource.data.users);
    }

    match /chats/{chatId}/messages/{messageId} {
        allow read, write: if isSignedIn() && exists(/databases/$(database)/documents/chats/$(chatId)) && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users);
    }
    
    match /transactions/{transactionId} {
      allow create: if isSignedIn();
      allow read: if isUser(resource.data.userId);
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isUser(resource.data.userId);
    }
    
    match /friend_requests/{reqId} {
      allow create: if isSignedIn();
      allow read, write, delete: if isSignedIn() && (resource.data.toId == request.auth.uid || resource.data.fromId == request.auth.uid);
    }
    
    match /marketing_applications/{appId} {
      allow create: if true;
    }
  }
}
